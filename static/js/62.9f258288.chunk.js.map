{"version":3,"sources":["components/Directory/index.js","components/Documents/CodeReview/4.js"],"names":["index","props","bindHandleScroll","event","scrollTop","srcElement","documentElement","window","pageYOffset","body","setState","scrollToAnchor","anchorName","anchorElement","document","getElementById","scrollIntoView","block","behavior","state","articleTree","getArticleTree","bind","childrens","getElementsByClassName","children","i","len","length","nodeName","id","innerText","push","name","tag","this","pathSnippets","location","pathname","split","filter","TOTAL_DATA","getElementsByTagName","innerHTML","section","title","setTitle","header","before","scrollY","directory","offsetTop","addEventListener","onscroll","footer","H","offsetParent","s","offsetHeight","style","after","className","removeEventListener","array","targetObj","targetIndex","findIndex","n","map","key","paddingLeft","onClick","Component","withRouter","to","href","target","rel"],"mappings":"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","file":"static/js/62.9f258288.chunk.js","sourcesContent":["//文档右侧标题导航\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TOTAL_DATA } from \"../../assets/data\";\r\nimport \"./index.less\";\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            articleTree: [],\r\n            scrollTop: null\r\n        }\r\n        this.getArticleTree = this.getArticleTree.bind(this);\r\n    }\r\n    getArticleTree() {\r\n        let childrens = document.getElementsByClassName(\"article-content\")[0].children;\r\n        let articleTree = [];\r\n        for (let i = 0, len = childrens.length; i < len - 1; i++) {\r\n            let nodeName = childrens[i].nodeName;\r\n            if (nodeName === \"H2\" || nodeName === \"H3\") {\r\n                childrens[i].id = childrens[i].innerText;\r\n                articleTree.push({\r\n                    name: childrens[i].innerText,\r\n                    tag: childrens[i].nodeName\r\n                });\r\n            }\r\n        }\r\n        this.setState({ articleTree });\r\n    }\r\n    setTitle() {\r\n        let path = this.props.location.pathname;\r\n        const pathSnippets = path.split('/').filter(i => i);\r\n        for (let i = 0, len = TOTAL_DATA.length; i < len; i++) {\r\n            if (pathSnippets[0] === TOTAL_DATA[i].name) {\r\n                document.getElementsByTagName(\"h1\")[0].innerHTML = TOTAL_DATA[i].section.length > 0 ? TOTAL_DATA[i].section[pathSnippets[pathSnippets.length - 1]] : TOTAL_DATA[i].title;\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //获取文档标题树\r\n        this.getArticleTree();\r\n        this.setTitle();\r\n        //页面滚动到文档末尾时，将directory逐渐向上隐藏\r\n        let header = document.getElementById(\"header\");\r\n        let before = window.scrollY;\r\n        let directory = document.getElementsByClassName(\"directory-list\")[0];\r\n        //offsetTop为页面加载时directory距顶端的距离\r\n        let offsetTop = directory.offsetTop;\r\n        window.addEventListener('scroll', this.bindHandleScroll);\r\n        window.onscroll = function () {\r\n            let footer = document.getElementsByClassName(\"page-footer\")[0], H = 0;\r\n            while (footer) {\r\n                //H为footer距顶端的距离\r\n                H += footer.offsetTop;\r\n                footer = footer.offsetParent;\r\n            }\r\n            let s = document.body.scrollTop || document.documentElement.scrollTop;\r\n            //s为当前滚动距离加offsetTop加directory高度,即directory底端距顶部的距离\r\n            s = s + (offsetTop + directory.offsetHeight);\r\n            //当s超出H时,directory向上收起\r\n            if (s > H + header.offsetHeight) {\r\n                directory.style = `position:fixed;top:${offsetTop - s + H}px;transition:none`;\r\n            } else {\r\n                // 在s<=H时,若向下滚动时,滚动距离超过header高度将header收起;向上滚动则将header显示,并且directory随header平移\r\n                let after = window.scrollY;\r\n                if (after > header.offsetHeight) {\r\n                    if (before < after) {\r\n                        header.className = \"ant-layout-header header header-affixed\";\r\n                        directory.className = \"directory-list directory-affixed\"\r\n                        before = after;\r\n                    };\r\n                    if (before > after) {\r\n                        header.className = \"ant-layout-header header header-visible\";\r\n                        directory.className = \"directory-list\"\r\n                        before = after;\r\n                    };\r\n                }\r\n                directory.style = \"\";\r\n            }\r\n        }\r\n    }\r\n    //获取滚动条滚动的高度\r\n    bindHandleScroll = (event) => {\r\n        const scrollTop = (event.srcElement ? event.srcElement.documentElement.scrollTop : false)\r\n            || window.pageYOffset\r\n            || (event.srcElement ? event.srcElement.body.scrollTop : 0);\r\n        this.setState({ scrollTop });\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.bindHandleScroll);\r\n    }\r\n    //点击directory跳转到锚点\r\n    scrollToAnchor = (anchorName) => {\r\n        if (anchorName) {\r\n            let anchorElement = document.getElementById(anchorName);\r\n            if (anchorElement) {\r\n                anchorElement.scrollIntoView({\r\n                    block: 'start',\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let { articleTree, scrollTop } = this.state;\r\n        let length = articleTree.length;\r\n        if (document.getElementById(`tree-num-0`) && length > 0) {\r\n            let array = [];\r\n            //array内为所有锚点的offsetTop,从小到大排列\r\n            for (let i = 0; i < length; i++) {\r\n                let targetObj = document.getElementById(articleTree[i].name);\r\n                array.push(targetObj.offsetTop);\r\n            }\r\n            //targetIndex为array中第一个大于当前滚动距离的值的index,通过offsetTop判断当前滚动到哪个锚点,并改变对应的标题导航样式。\r\n            let targetIndex = array.findIndex(n => n > scrollTop) - 1;\r\n            for (let i = 0; i < length; i++) {\r\n                i === targetIndex ? document.getElementById(`tree-num-${i}`).className = \"tree-num directory-item-active\" : document.getElementById(`tree-num-${i}`).className = \"tree-num\";\r\n            }\r\n            //当滚动距离超过最后一个锚点时,array中找不到,返回-1\r\n            if (targetIndex === -2) {\r\n                document.getElementById(`tree-num-${length - 1}`).className = \"tree-num directory-item-active\";\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"directory\">\r\n                <ul className=\"directory-list\">\r\n                    {articleTree.map((key, index) =>\r\n                        <li key={index} id={`tree-num-${index}`} className=\"tree-num\" title={key.name} style={{ paddingLeft: key.tag === \"H2\" ? 10 : 22 }} onClick={() => { this.scrollToAnchor(`${key.name}`) }}>{key.name}</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(index);","import React, { Component } from 'react';\r\nimport Directory from \"../../Directory\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class index extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page-content\">\r\n                <div className=\"article\">\r\n                    <div className=\"article-title\">\r\n                        <h1>代码评审的速度</h1>\r\n                    </div>\r\n                    <div className=\"article-content\">\r\n                        <h2>为什么代码评审应该是快速的?</h2>\r\n                        <p className=\"indent-2\"><b>在谷歌中，我们针对开发团队共同生产产品的速度进行优化，而不是针对单个开发人员编写代码的速度进行优化</b>。个人发展的速度很重要，只是没有整个团队的速度重要。</p>\r\n                        <p className=\"indent-2\">当代码评审很慢时，会发生以下几件事:</p>\r\n                        <ul className=\"indent-2\">\r\n                            <li><b>整个团队的速度降低了</b>。是的，如果一个人对评审的反应不是很快，去完成其他的工作。但是，由于每个 CL 都要等待一次又一次的评审，团队其他成员的新特性和 bug 修复会延迟几天、几周或几个月。</li>\r\n                            <li><b>开发人员开始抗议代码评审过程</b>。如果评审人员每隔几天才回复一次，但每次都要求对 CL 进行重大更改，这对开发人员来说可能是令人沮丧和困难的。通常，这表现为对评审人员的“严格”的抱怨。如果评审人员请求相同的实质性更改(这些更改确实改善了代码的健康状况)，但是每次开发人员进行更新时都会快速响应，那么抱怨就会消失。对代码评审过程的大多数抱怨实际上是通过加快过程来解决的。</li>\r\n                            <li><b>代码健康状况会受到影响</b>。当评审速度较慢时，允许开发人员提交不如预期的 CL 的压力就会增加。缓慢的评审还会阻碍代码清理、重构和对现有 CL 的进一步改进。</li>\r\n                        </ul>\r\n                        <h2>代码评审应该有多快?</h2>\r\n                        <p className=\"indent-2\">如果您没有集中精力完成任务，那么应该在任务完成后不久进行代码评审。</p>\r\n                        <p className=\"indent-2\"><b>一个工作日</b>是响应代码评审请求(即第二天早上的第一件事)<b>所需的最长时间</b>。</p>\r\n                        <p className=\"indent-2\">遵循这些指导原则意味着一个典型的 CL 应该在一天内(如果需要的话)进行多轮评审。</p>\r\n                        <h2>速度vs.中断</h2>\r\n                        <p className=\"indent-2\">有一段时间，对个人速度的考虑超过了对团队速度的考虑。<b>如果你正在集中精力做一项任务，比如写代码，不要打断自己去做代码评审</b>。研究表明，开发人员在中断开发之后，可能需要很长时间才能恢复到平稳的开发流程。因此，对团队来说，在编写代码时打断自己实际上比让另一个开发人员等待代码评审的时间更昂贵。</p>\r\n                        <p className=\"indent-2\">相反，在你的工作中等待一个断点，然后你才回应一个评审的请求。这可能是当你当前的编码任务完成时，午饭后，从会议回来，从微型厨房回来，等等。</p>\r\n                        <h2>快速响应</h2>\r\n                        <p className=\"indent-2\">当我们讨论代码评审的速度时，我们关心的是响应时间，而不是 CL 完成整个评审并提交所需的时间。理想情况下，整个过程也应该是快速的，但是<b>对于单个响应的快速响应比整个过程的快速响应更重要</b>。</p>\r\n                        <p className=\"indent-2\">即使有时需要很长时间才能完成整个评审过程，但是在整个过程中评审人员的快速响应可以极大地减轻开发人员对“缓慢”代码评审的沮丧。</p>\r\n                        <p className=\"indent-2\">如果你太忙了,做一个完整的回顾在 CL 时,你仍然可以发送一个快速反应,让开发人员知道什么时候你会得到它,建议其他评审者可以更快地响应,或者<Link to=\"/codereview/3\">提供一些最初的广泛评论</Link>。(注意:这并不意味着您应该中断编码，即使是为了发送这样的响应—在您工作中的一个合理的断点发送响应。)</p>\r\n                        <p className=\"indent-2\">重要的是，评审人员要花足够的时间进行评审，以确保他们的“ LGTM ”意味着“这段代码符合<Link to=\"/codereview/1\">我们的标准</Link>”。然而，在理想情况下，个人的反应仍然应该是快速的。</p>\r\n                        <h2>Cross-Time-Zone 评审</h2>\r\n                        <p className=\"indent-2\">当处理时区差异时，试着在作者还在办公室的时候回到他身边。如果他们已经回家了，那么在他们第二天回到办公室之前，确保你的评审已经完成。</p>\r\n                        <h2>带有注释的 LGTM</h2>\r\n                        <p className=\"indent-2\">为了加快代码评审的速度，在某些情况下，评审人员应该给出 LGTM/Approval，即使他们还在 CL 上留下未解决的注释。这是在以下两种情况下完成的:</p>\r\n                        <ul className=\"indent-2\">\r\n                            <li>评审员确信开发人员将适当地处理评审员剩余的所有评论。</li>\r\n                            <li>其余的更改是次要的，不必由开发人员完成。</li>\r\n                            <li>如果不清楚，审查员应该指定他们想要的选项。</li>\r\n                            <li>当开发人员和审阅人员处于不同的时区时，使用带有注释的 LGTM 尤其值得考虑，否则开发人员将会等待一整天，只为获得“ LGTM ，批准”。</li>\r\n                        </ul>\r\n                        <h2>大型 CL </h2>\r\n                        <p className=\"indent-2\">如果有人给你一个代码评审这么大你不知道当你能有时间去评审它,你的典型的反应应该要求开发人员在彼此之上<Link to=\"/codereview/8\">把 CL 分割成几个较小型 CL </Link>,而不是必须评审一个巨大的 CL 。这通常是可能的，并且对评审人员非常有帮助，即使这需要开发人员做额外的工作。</p>\r\n                        <p className=\"indent-2\">如果一个 CL 不能分解成更小型 CL ，并且您没有时间快速地回顾整个过程，那么至少要对 CL 的总体设计写一些注释，并将其发回开发人员进行改进。作为评审人员，您的目标之一应该是始终解除开发人员的阻塞，或者使他们能够快速地采取某种进一步的行动，而不会牺牲代码的健康状况。</p>\r\n                        <h2>随着时间的推移，代码评审的改进</h2>\r\n                        <p className=\"indent-2\">如果您遵循这些指导原则，并且对代码评审非常严格，那么您应该会发现，随着时间的推移，整个代码评审过程会变得越来越快。开发人员了解健康代码需要什么，并从一开始就向您发送非常棒的 CL ，这需要的评审时间越来越少。评审员学会快速响应，而不是在评审过程中添加不必要的延迟。但是<b>不要为了提高速度而牺牲代码评审标准或质量</b>——从长远来看，这实际上不会使任何事情发生得更快。</p>\r\n                        <h2>紧急情况</h2>\r\n                        <p className=\"indent-2\">在一些<a href=\"https://github.com/google/eng-practices/blob/master/review/emergencies.md\" target=\"_blank\" rel=\"noopener noreferrer\">紧急情况</a>下， CL 必须非常快速地通过整个评审过程，并且质量指南将被放松。但是，请看看什么是紧急情况?用于描述哪些情况实际上符合紧急情况，哪些不符合紧急情况。</p>\r\n                    </div>\r\n                </div>\r\n                <Directory />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}