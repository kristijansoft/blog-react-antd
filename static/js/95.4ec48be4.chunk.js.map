{"version":3,"sources":["../node_modules/codemirror/mode/haml/haml.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/ruby/ruby.js"],"names":["CodeMirror","defineMode","config","htmlMode","getMode","name","rubyMode","rubyInQuote","endQuote","stream","state","peek","rubyState","tokenize","length","next","html","ruby","match","skipToEnd","token","ch","previousToken","style","indented","startOfLine","htmlState","startState","copyState","sol","indentation","eatSpace","eol","backUp","defineMIME","mod","require","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","prop","inText","chain","parser","eat","inBlock","eatWhile","doctype","depth","inTag","baseState","tagName","tagStart","test","quote","closure","isInAttribute","inAttribute","stringStartCol","column","terminator","Context","this","prev","context","indent","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","textAfter","fullLine","Pass","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","push","reverse","mimeModes","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","tags","configTags","configScript","scriptTypes","matches","mode","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","maybeBackup","local","line","innerMode","wordObj","words","o","e","curPunc","keywords","indentWords","dedentWords","opening","closing","newtok","tokenBase","readBlockComment","m","phrase","mayIndent","readQuoted","start","pos","found","escaped","indexOf","regexpAhead","embed","delim","propertyIsEnumerable","pop","varList","lastTok","more","tokenBaseUntilBrace","tokenBaseOnce","alreadyCalled","unescaped","continuedLine","kwtype","thisTok","word","firstChar","charAt","ct","closed","lineComment","fold"],"mappings":"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","file":"static/js/95.4ec48be4.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  // full haml mode. This handled embedded ruby and html fragments too\n  CodeMirror.defineMode(\"haml\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n\n    function rubyInQuote(endQuote) {\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = html;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n\n    function ruby(stream, state) {\n      if (stream.match(\"-#\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function html(stream, state) {\n      var ch = stream.peek();\n\n      // handle haml declarations. All declarations that cant be handled here\n      // will be passed to html mode\n      if (state.previousToken.style == \"comment\" ) {\n        if (state.indented > state.previousToken.indented) {\n          stream.skipToEnd();\n          return \"commentLine\";\n        }\n      }\n\n      if (state.startOfLine) {\n        if (ch == \"!\" && stream.match(\"!!\")) {\n          stream.skipToEnd();\n          return \"tag\";\n        } else if (stream.match(/^%[\\w:#\\.]+=/)) {\n          state.tokenize = ruby;\n          return \"hamlTag\";\n        } else if (stream.match(/^%[\\w:]+/)) {\n          return \"hamlTag\";\n        } else if (ch == \"/\" ) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n\n      if (state.startOfLine || state.previousToken.style == \"hamlTag\") {\n        if ( ch == \"#\" || ch == \".\") {\n          stream.match(/[\\w-#\\.]*/);\n          return \"hamlAttribute\";\n        }\n      }\n\n      // donot handle --> as valid ruby, make it HTML close comment instead\n      if (state.startOfLine && !stream.match(\"-->\", false) && (ch == \"=\" || ch == \"-\" )) {\n        state.tokenize = ruby;\n        return state.tokenize(stream, state);\n      }\n\n      if (state.previousToken.style == \"hamlTag\" ||\n          state.previousToken.style == \"closeAttributeTag\" ||\n          state.previousToken.style == \"hamlAttribute\") {\n        if (ch == \"(\") {\n          state.tokenize = rubyInQuote(\")\");\n          return state.tokenize(stream, state);\n        } else if (ch == \"{\") {\n          if (!stream.match(/^\\{%.*/)) {\n            state.tokenize = rubyInQuote(\"}\");\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n\n      return htmlMode.token(stream, state.htmlState);\n    }\n\n    return {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          indented: 0,\n          previousToken: { style: null, indented: 0},\n          tokenize: html\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          indented: state.indented,\n          previousToken: state.previousToken,\n          tokenize: state.tokenize\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        // dont record comment line as we only want to measure comment line with\n        // the opening comment block\n        if (style && style != \"commentLine\") {\n          state.previousToken = { style: style, indented: state.indented };\n        }\n        // if current state is ruby and the previous token is not `,` reset the\n        // tokenize to html\n        if (stream.eol() && state.tokenize == ruby) {\n          stream.backUp(1);\n          var ch = stream.peek();\n          stream.next();\n          if (ch && ch != \",\") {\n            state.tokenize = html;\n          }\n        }\n        // reprocess some of the specific style tag when finish setting previousToken\n        if (style == \"hamlTag\") {\n          style = \"tag\";\n        } else if (style == \"commentLine\") {\n          style = \"comment\";\n        } else if (style == \"hamlAttribute\") {\n          style = \"attribute\";\n        } else if (style == \"closeAttributeTag\") {\n          style = null;\n        }\n        return style;\n      }\n    };\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-haml\", \"haml\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n    \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n    \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n    \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n    \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n    \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n  ]);\n  var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                             \"catch\", \"loop\", \"proc\", \"begin\"]);\n  var dedentWords = wordObj([\"end\", \"until\"]);\n  var opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\n  var closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\n});\n"],"sourceRoot":""}