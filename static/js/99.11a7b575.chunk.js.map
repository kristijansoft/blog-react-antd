{"version":3,"sources":["pages/DemoPages/Vis/utils.js","pages/DemoPages/Vis/index.js"],"names":["interp_multiPoint","x","y","n","t","fval","m","k","interp_onePoint","s","Array","kk","lc","p","q","u","Math","floor","abs","spl","getMax","arr","max","i","length","getMin","min","getMaxIndex","index","isNaN","getMinIndex","formatDecimal","num","decimal","toString","indexOf","substring","Number","parseFloat","toFixed","treeData","push","title","key","state","loaded","fileName","fmin","fmax","Tout_min","dTout","Tout_max","dataType","disper_map_stack_A2B","undefined","disper_map_stack_B2A","disper_map_stack_SYM","pshift","fminIndex","fmaxIndex","disp","vout","white_data","pink_data","black_data","black_xData","black_yData","resultX","resultY","prevPosition","helpMaskVisible","opacity","handleResize","chart1_heatmap","resize","chart1_line","chart2_heatmap","chart2_line","chart3_heatmap","chart3_line","chart4","handleKeyPress","e","target","localName","type","handleCalculate","getData","chart1_loading_mask","style","display","chart2_loading_mask","chart3_loading_mask","axios","get","headers","then","res","data","setState","chartRender","xAxis","name","nameLocation","nameGap","lineRender","getDisp","f0","v","nv","fminArr","fmaxArr","len","proc_F","proc_V","white_DataSource","map","col","row","range_v","NaN","f","isArray","updateHMLineData","updateLineData","heatmap","line","dataSource","heatmap_expandOption","nf0","heatmap_data","heatmap_xData","heatmap_yData","j","setOption","grid","right","left","top","bottom","yAxis","visualMap","show","calculable","realtime","splitNumber","inRange","color","series","progressive","animation","tooltip","formatter","params","id","symbol","smooth","symbolSize","itemStyle","hoverAnimation","cursor","legendHoverLink","getZr","on","event","offsetX","offsetY","button","buttons","currentPosition","convertFromPixel","seriesIndex","xAxisIndex","distenceArr","position","currentIndex","shiftKey","ctrlKey","dispatchAction","dataIndex","currentPositionX","inverse","splice","handleSelect","selectedKeys","handleClear","handleChangeInput","value","handleChangeData","message","info","clearHeatmap","chart","clear","clearLine","handleSave","item","elementA","document","createElement","download","blob","Blob","href","URL","createObjectURL","click","openHelpMask","timer","setInterval","clearInterval","closeHelpMask","this","echarts","getElementById","window","addEventListener","dispose","removeEventListener","height","alignItems","width","className","padding","justifyContent","onSelect","blockNode","checkable","defaultValue","onChange","bind","textAlign","onClick","Group","marginTop","tip","Component"],"mappings":"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","file":"static/js/99.11a7b575.chunk.js","sourcesContent":["function interp_multiPoint(x, y, n, t, fval, m) {\r\n    if (t == null) {\r\n        return;\r\n    }\r\n    let tempVal = 0.0;;\r\n    for (let k = 0; k < m; k++) {\r\n        fval[k] = interp_onePoint(x, y, n, t[k], tempVal);\r\n    }\r\n    return fval;\r\n}\r\n\r\nfunction interp_onePoint(x, y, n, t, fval) {\r\n    let s = new Array(5);\r\n    spl(x, y, n, -1, t, s);\r\n    fval = s[4];\r\n    return fval;\r\n}\r\n\r\n\r\nfunction spl(x, y, n, k, t, s) {\r\n    let kk, m, lc, u = [], p, q;\r\n    s[0] = 0.0;\r\n    s[1] = 0.0;\r\n    s[2] = 0.0;\r\n    s[3] = 0.0;\r\n    s[4] = 0.0;\r\n    if (n < 1) {\r\n        return;\r\n    }\r\n    if (n === 1) {\r\n        s[0] = y[0];\r\n        s[4] = y[0];\r\n        return;\r\n    }\r\n    if (n === 2) {\r\n        s[0] = y[0];\r\n        s[1] = (y[1] - y[0]) / (x[1] - x[0]);\r\n        if (k < 0) {\r\n            s[4] = (y[0] * (t - x[1]) - y[1] * (t - x[0])) / (x[0] - x[1]);\r\n        }\r\n        return;\r\n    }\r\n    if (k < 0 && n > 0 && t < x[0]) {\r\n        s[4] = y[0];\r\n        return;\r\n    }\r\n    if (k < 0 && n > 0 && t > x[n - 1]) {\r\n        s[4] = y[n - 1];\r\n        return;\r\n    }\r\n    if (k < 0) {\r\n        if (t <= x[1]) {\r\n            kk = 0;\r\n\r\n        } else if (t >= x[n - 1]) {\r\n            kk = n - 2;\r\n        } else {\r\n            kk = 1;\r\n            m = n;\r\n            while (kk - m !== 1 && kk - m !== -1) {\r\n                lc = Math.floor((kk + m) / 2);\r\n                if (t < x[lc - 1]) {\r\n                    m = lc;\r\n                } else {\r\n                    kk = lc;\r\n                }\r\n            }\r\n            kk = kk - 1;\r\n        }\r\n    } else {\r\n        kk = k;\r\n    }\r\n    if (kk > n - 1) {\r\n        kk = n - 2;\r\n    }\r\n    u[2] = (y[kk + 1] - y[kk]) / (x[kk + 1] - x[kk]);\r\n    if (n === 3) {\r\n        if (kk === 0) {\r\n            u[3] = (y[2] - y[1]) / (x[2] - x[1]);\r\n            u[4] = 2.0 * u[3] - u[2];\r\n            u[1] = 2.0 * u[2] - u[3];\r\n            u[0] = 2.0 * u[1] - u[2];\r\n        } else {\r\n            u[1] = (y[1] - y[0]) / (x[1] - x[0]);\r\n            u[0] = 2.0 * u[1] - u[2];\r\n            u[3] = 2.0 * u[2] - u[1];\r\n            u[4] = 2.0 * u[3] - u[2];\r\n        }\r\n    }\r\n    else {\r\n        if (kk <= 1) {\r\n            u[3] = (y[kk + 2] - y[kk + 1]) / (x[kk + 2] - x[kk + 1]);\r\n            if (kk === 1) {\r\n                u[1] = (y[1] - y[0]) / (x[1] - x[0]);\r\n                u[0] = 2.0 * u[1] - u[2];\r\n                if (n === 4) {\r\n                    u[4] = 2.0 * u[3] - u[2];\r\n\r\n                } else {\r\n                    u[4] = (y[4] - y[3]) / (x[4] - x[3]);\r\n                }\r\n            } else {\r\n                u[1] = 2.0 * u[2] - u[3];\r\n                u[0] = 2.0 * u[1] - u[2];\r\n                u[4] = (y[3] - y[2]) / (x[3] - x[2]);\r\n            }\r\n        }\r\n        else if (kk >= (n - 3)) {\r\n            u[1] = (y[kk] - y[kk - 1]) / (x[kk] - x[kk - 1]);\r\n            if (kk === (n - 3)) {\r\n                u[3] = (y[n - 1] - y[n - 2]) / (x[n - 1] - x[n - 2]);\r\n                u[4] = 2.0 * u[3] - u[2];\r\n                if (n === 4) {\r\n                    u[0] = 2.0 * u[1] - u[2];\r\n\r\n                } else {\r\n                    u[0] = (y[kk - 1] - y[kk - 2]) / (x[kk - 1] - x[kk - 2]);\r\n                }\r\n            } else {\r\n                u[3] = 2.0 * u[2] - u[1];\r\n                u[4] = 2.0 * u[3] - u[2];\r\n                u[0] = (y[kk - 1] - y[kk - 2]) / (x[kk - 1] - x[kk - 2]);\r\n            }\r\n        } else {\r\n            u[1] = (y[kk] - y[kk - 1]) / (x[kk] - x[kk - 1]);\r\n            u[0] = (y[kk - 1] - y[kk - 2]) / (x[kk - 1] - x[kk - 2]);\r\n            u[3] = (y[kk + 2] - y[kk + 1]) / (x[kk + 2] - x[kk + 1]);\r\n            u[4] = (y[kk + 3] - y[kk + 2]) / (x[kk + 3] - x[kk + 2]);\r\n        }\r\n    }\r\n    s[0] = Math.abs(u[3] - u[2]);\r\n    s[1] = Math.abs(u[0] - u[1]);\r\n    if ((s[0] + 1.0 === 1.0) && (s[1] + 1.0 === 1.0)) {\r\n        p = (u[1] + u[2]) / 2.0;\r\n    } else {\r\n        p = (s[0] * u[1] + s[1] * u[2]) / (s[0] + s[1]);\r\n    }\r\n    s[0] = Math.abs(u[3] - u[4]);\r\n    s[1] = Math.abs(u[2] - u[1]);\r\n    if ((s[0] + 1.0 === 1.0) && (s[1] + 1.0 === 1.0)) {\r\n        q = (u[2] + u[3]) / 2.0;\r\n    } else {\r\n        q = (s[0] * u[2] + s[1] * u[3]) / (s[0] + s[1]);\r\n    }\r\n    s[0] = y[kk];\r\n    s[1] = p;\r\n    s[3] = x[kk + 1] - x[kk];\r\n    s[2] = (3.0 * u[2] - 2.0 * p - q) / s[3];\r\n    s[3] = (p + q - 2.0 * u[2]) / (s[3] * s[3]);\r\n    if (k < 0) {\r\n        p = t - x[kk];\r\n        s[4] = s[0] + s[1] * p + s[2] * p * p + s[3] * p * p * p;\r\n    }\r\n    return s[4];\r\n}\r\n\r\n//获取最大值\r\nlet getMax = arr => {\r\n    //假设最大值max 为arr[0]\r\n    var max = arr[0];\r\n    //遍历对比\r\n    for (var i = 0; i < arr.length; i++) {\r\n        //若max小于当前项 说明不是最大值 将当前项的值赋予max \r\n        // 继续遍历对比找到最大的值\r\n        if (max < arr[i]) {\r\n            max = arr[i];\r\n        }\r\n    }\r\n    return max;\r\n}\r\n//获取最小值\r\nlet getMin = arr => {\r\n    var min = arr[0];\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (min > arr[i]) {\r\n            min = arr[i];\r\n        }\r\n    }\r\n    return min;\r\n}\r\n//获取最大值的下标\r\nlet getMaxIndex = arr => {\r\n    let max = arr[0];\r\n    //声明了个变量 保存下标值\r\n    let index = 0;\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (isNaN(max)) {\r\n            max = arr[i];\r\n            index = i;\r\n        } else if (max < arr[i]) {\r\n            max = arr[i];\r\n            index = i;\r\n        }\r\n    }\r\n    return index;\r\n}\r\n//获取最小值的下标\r\nlet getMinIndex = arr => {\r\n    var min = arr[0];\r\n    //声明了个变量 保存下标值\r\n    var index = 0;\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (isNaN(min)) {\r\n            min = arr[i];\r\n            index = i;\r\n        } else if (min > arr[i]) {\r\n            min = arr[i];\r\n            index = i;\r\n        }\r\n    }\r\n    return index;\r\n}\r\n//格式化小数\r\nlet formatDecimal = (num, decimal) => {\r\n    num = num.toString()\r\n    let index = num.indexOf('.')\r\n    if (index !== -1) {\r\n        num = num.substring(0, decimal + index + 1)\r\n    } else {\r\n        num = num.substring(0)\r\n    }\r\n    return Number(parseFloat(num).toFixed(decimal))\r\n}\r\n\r\nexport { interp_multiPoint, interp_onePoint, getMax, getMin, getMaxIndex, getMinIndex, formatDecimal };","import React, { Component } from 'react';\r\nimport { Tree, Input, Radio, Button, message, Spin } from \"antd\";\r\nimport * as echarts from 'echarts';\r\nimport axios from \"axios\";\r\nimport { interp_multiPoint, getMax, getMin, getMaxIndex, getMinIndex, formatDecimal } from \"./utils\";\r\nimport \"./index.less\";\r\n\r\nlet treeData = [];\r\nfor (let i = 1; i < 52; i++) {\r\n    treeData.push({\r\n        title: 'pshift_group_' + i,\r\n        key: 'pshift_group_' + i,\r\n    })\r\n}\r\n\r\nexport default class index extends Component {\r\n    state = {\r\n        loaded: false,\r\n        treeData,\r\n        fileName: \"\",\r\n        fmin: 0.1,\r\n        fmax: 5,\r\n        Tout_min: 0.2,\r\n        dTout: 0.05,\r\n        Tout_max: 2.0,\r\n        dataType: \"A2B\",\r\n        disper_map_stack_A2B: undefined,\r\n        disper_map_stack_B2A: undefined,\r\n        disper_map_stack_SYM: undefined,\r\n        pshift: undefined,\r\n        fminIndex: undefined,\r\n        fmaxIndex: undefined,\r\n        disp: undefined,\r\n        vout: undefined,\r\n        fval: undefined,\r\n        white_data: [],\r\n        pink_data: [],\r\n        black_data: [],\r\n        black_xData: [],\r\n        black_yData: [],\r\n        resultX: [],\r\n        resultY: [],\r\n        prevPosition: undefined,\r\n        helpMaskVisible: false,\r\n        opacity: 0\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"可视化数据操作\";\r\n        this.chart1_heatmap = echarts.init(document.getElementById('chart1_heatmap'));\r\n        this.chart1_line = echarts.init(document.getElementById('chart1_line'));\r\n        this.chart1_loading_mask = document.getElementById('chart1_loading_mask');\r\n        this.chart2_heatmap = echarts.init(document.getElementById('chart2_heatmap'));\r\n        this.chart2_line = echarts.init(document.getElementById('chart2_line'));\r\n        this.chart2_loading_mask = document.getElementById('chart2_loading_mask');\r\n        this.chart3_heatmap = echarts.init(document.getElementById('chart3_heatmap'));\r\n        this.chart3_line = echarts.init(document.getElementById('chart3_line'));\r\n        this.chart3_loading_mask = document.getElementById('chart3_loading_mask');\r\n        this.chart4 = echarts.init(document.getElementById('chart4'));\r\n        this.handleClear();\r\n        window.addEventListener(\"resize\", this.handleResize);\r\n        window.addEventListener(\"keypress\", this.handleKeyPress);\r\n    }\r\n    handleResize = () => {\r\n        this.chart1_heatmap.resize();\r\n        this.chart1_line.resize();\r\n        this.chart2_heatmap.resize();\r\n        this.chart2_line.resize();\r\n        this.chart3_heatmap.resize();\r\n        this.chart3_line.resize();\r\n        this.chart4.resize();\r\n    }\r\n    handleKeyPress = e => {\r\n        if (e.key === \"Enter\" && e.target.localName === \"input\" && e.target.type === \"text\") {\r\n            this.handleCalculate();\r\n        }\r\n    }\r\n    getData = fileName => {\r\n        this.chart1_loading_mask.style.display = \"flex\";\r\n        this.chart2_loading_mask.style.display = \"flex\";\r\n        this.chart3_loading_mask.style.display = \"flex\";\r\n        axios.get(`./disper_json/${fileName}.json`, {\r\n            headers: {\r\n                \"Cache-Control\": \"no-cache\",\r\n            },\r\n        }).then(res => {\r\n            this.chart1_loading_mask.style.display = \"none\";\r\n            this.chart2_loading_mask.style.display = \"none\";\r\n            this.chart3_loading_mask.style.display = \"none\";\r\n            let { disper_map_stack_A2B, disper_map_stack_B2A, disper_map_stack_SYM, pshift } = res.data;\r\n            this.setState({\r\n                loaded: true,\r\n                disper_map_stack_A2B,\r\n                disper_map_stack_B2A,\r\n                disper_map_stack_SYM,\r\n                pshift,\r\n            });\r\n            this.chartRender(this.chart1_heatmap, this.chart1_line, disper_map_stack_A2B);\r\n            this.chartRender(this.chart2_heatmap, this.chart2_line, disper_map_stack_B2A);\r\n            this.chartRender(this.chart3_heatmap, this.chart3_line, disper_map_stack_SYM,\r\n                {\r\n                    xAxis: {\r\n                        name: \"Frequency (Hz)\",\r\n                        nameLocation: \"middle\",\r\n                        nameGap: 25\r\n                    },\r\n                });\r\n            this.lineRender(this.chart4);\r\n            this.getDisp();\r\n        });\r\n    }\r\n    getDisp = () => {\r\n        let { dataType, disper_map_stack_A2B, disper_map_stack_B2A, disper_map_stack_SYM, pshift, fmin, fmax, Tout_min, dTout, Tout_max } = this.state;\r\n        let { f0, v, nv } = pshift;\r\n        let fminArr = [], fmaxArr = [];\r\n        for (let i = 0, len = f0.length; i < len; i++) {\r\n            fminArr.push(Math.abs(fmin - f0[i]));\r\n            fmaxArr.push(Math.abs(fmax - f0[i]));\r\n        }\r\n        let fminIndex = getMinIndex(fminArr), fmaxIndex = getMinIndex(fmaxArr);\r\n        let vout = [], resultX = [];\r\n        for (let i = Tout_min; i <= Tout_max; i = Number((i + dTout).toFixed(2))) {\r\n            vout.push(1 / i);\r\n            resultX.push(i);\r\n        }\r\n        let proc_F = [], proc_V = [];\r\n        for (let i = 0, len = f0.length; i < len; i++) {\r\n            if (i >= fminIndex && i <= fmaxIndex) {\r\n                proc_F.push(f0[i]);\r\n            }\r\n        }\r\n        let white_DataSource = [], white_data = [];\r\n        switch (dataType) {\r\n            case \"A2B\":\r\n                white_DataSource = disper_map_stack_A2B[0].map((col, i) => disper_map_stack_A2B.map(row => row[i]));\r\n                break;\r\n            case \"B2A\":\r\n                white_DataSource = disper_map_stack_B2A[0].map((col, i) => disper_map_stack_B2A.map(row => row[i]));\r\n                break;\r\n            case \"SYM\":\r\n                white_DataSource = disper_map_stack_SYM[0].map((col, i) => disper_map_stack_SYM.map(row => row[i]));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        let range_v = getMax(v) - getMin(v);\r\n        for (let i = 0, len = white_DataSource.length; i < len; i++) {\r\n            if (i >= fminIndex && i <= fmaxIndex) {\r\n                proc_V.push((getMaxIndex(white_DataSource[i]) + 1) / nv * range_v + getMin(v));\r\n                white_data.push([f0[i], (getMaxIndex(white_DataSource[i]) + 1) / nv * range_v + getMin(v)]);\r\n            } else {\r\n                white_data.push([f0[i], NaN]);\r\n            }\r\n        }\r\n        let fval = new Array(vout.length);\r\n        let disp = {\r\n            f: vout,\r\n            v: interp_multiPoint(proc_F, proc_V, proc_F.length, vout, fval, vout.length)\r\n        }\r\n        for (let i = 0, len = disp.f.length; i < len; i++) {\r\n            if (disp.f[i] < fmin) {\r\n                disp.v[i] = NaN;\r\n            } else if (disp.f[i] > fmax) {\r\n                disp.v[i] = NaN;\r\n            }\r\n        }\r\n\r\n        let pink_data = [], resultY = [];\r\n        for (let i = 0, len = disp.f.length; i < len; i++) {\r\n            if (disp.f[i] && disp.v[i]) {\r\n                pink_data.push([disp.f[i], disp.v[i]]);\r\n                resultY.push(disp.v[i]);\r\n            } else {\r\n                pink_data.push(NaN);\r\n                resultY.push(NaN);\r\n            }\r\n        }\r\n        let black_data = [], black_xData = [], black_yData = [];\r\n        for (let i = 0, len = pink_data.length; i < len; i++) {\r\n            if (Array.isArray(pink_data[i])) {\r\n                black_data.push([disp.v[i], disp.v[i] / disp.f[i] / 2]);\r\n                black_xData.push(disp.v[i]);\r\n                black_yData.push(disp.v[i] / disp.f[i] / 2);\r\n            }\r\n        }\r\n        this.setState({\r\n            disp,\r\n            vout,\r\n            fval,\r\n            resultX,\r\n            resultY,\r\n            fminIndex,\r\n            fmaxIndex,\r\n            white_data,\r\n            pink_data,\r\n            black_data,\r\n            black_xData,\r\n            black_yData\r\n        });\r\n        this.updateHMLineData(this.chart1_line, white_data, pink_data);\r\n        this.updateHMLineData(this.chart2_line, white_data, pink_data);\r\n        this.updateHMLineData(this.chart3_line, white_data, pink_data);\r\n        this.updateLineData(this.chart4, black_xData, black_yData, black_data);\r\n    }\r\n    chartRender = (heatmap, line, dataSource, heatmap_expandOption) => {\r\n        let { pshift } = this.state;\r\n        let { f0, v, nf0, nv } = pshift;\r\n        /**绘制热力图背景 */\r\n        let heatmap_data = [], heatmap_xData = [], heatmap_yData = [];\r\n        for (let i = 0; i < nf0; i++) {\r\n            heatmap_xData.push(formatDecimal(f0[i], 2));\r\n            for (let j = 0; j < nv; j++) {\r\n                heatmap_data.push([i, j, dataSource[j][i]]);\r\n            }\r\n        }\r\n        for (let j = 0; j < nv; j++) {\r\n            heatmap_yData.push(formatDecimal(v[j], 2));\r\n        }\r\n        heatmap.setOption({\r\n            grid: {\r\n                right: 20,\r\n                left: 60,\r\n                top: 20,\r\n                bottom: 40\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                data: heatmap_xData\r\n            },\r\n            yAxis: {\r\n                type: 'category',\r\n                data: heatmap_yData,\r\n                name: \"Phase velocity (km/s)\",\r\n                nameLocation: \"middle\",\r\n                nameGap: 36\r\n            },\r\n            visualMap: {\r\n                type: 'continuous',\r\n                show: false,\r\n                left: 'right',\r\n                top: 'center',\r\n                calculable: true,\r\n                realtime: false,\r\n                splitNumber: 10,\r\n                inRange: {\r\n                    color: ['#00008d', '#102ff0', '#059afa', '#5dff9a', '#fded02', '#ff9109', '#df0300', '#7c0100', '#830100', '#810000']\r\n                },\r\n                min: 0.95,\r\n                max: 1\r\n            },\r\n            series: [{\r\n                type: 'heatmap',\r\n                data: heatmap_data,\r\n                progressive: 5000,\r\n                animation: false\r\n            }],\r\n        }, true);\r\n        this.setState({ heatmap_xData, heatmap_yData });\r\n        if (heatmap_expandOption) {\r\n            heatmap.setOption(heatmap_expandOption);\r\n        }\r\n        line.setOption({\r\n            tooltip: {\r\n                formatter: function (params) {\r\n                    return 'f: ' + params.data[0].toFixed(4) + '<br>v: ' + params.data[1].toFixed(4);\r\n                }\r\n            },\r\n            grid: {\r\n                right: 20,\r\n                left: 60,\r\n                top: 20,\r\n                bottom: 40\r\n            },\r\n            xAxis: {\r\n                type: 'value',\r\n                show: false,\r\n                max: getMax(heatmap_xData),\r\n                min: getMin(heatmap_xData)\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                show: false,\r\n                max: getMax(heatmap_yData),\r\n                min: getMin(heatmap_yData)\r\n            },\r\n            series: [\r\n                {\r\n                    id: \"a\",\r\n                    type: 'line',\r\n                    symbol: 'circle',\r\n                    smooth: true,\r\n                    symbolSize: 5,\r\n                    itemStyle: {\r\n                        color: \"#fff\"\r\n                    },\r\n                    data: [],\r\n                    hoverAnimation: false,\r\n                    cursor: \"default\",\r\n                    legendHoverLink: false\r\n                },\r\n                {\r\n                    id: \"b\",\r\n                    type: 'line',\r\n                    symbol: 'circle',\r\n                    smooth: true,\r\n                    symbolSize: 8,\r\n                    itemStyle: {\r\n                        color: \"#ff00ff\"\r\n                    },\r\n                    hoverAnimation: false,\r\n                }\r\n            ]\r\n        }, true);\r\n        line.getZr().on('mousemove', params => {\r\n            let { event, offsetX, offsetY } = params;\r\n            if (event.button === 0 && event.buttons === 1) {\r\n                let currentPosition = line.convertFromPixel({ seriesIndex: 0, xAxisIndex: 0 }, [offsetX, offsetY]);\r\n                let { white_data, prevPosition, fminIndex, fmaxIndex, vout, disp, pshift } = this.state;\r\n                let distenceArr = white_data.map(position => isNaN(position[1]) ? NaN : Math.abs(currentPosition[0] - position[0]));\r\n                let position = [];\r\n                let currentIndex = getMinIndex(distenceArr);\r\n                if (event.shiftKey || event.ctrlKey) {\r\n                    if (event.shiftKey) {\r\n                        fmaxIndex = currentIndex;\r\n                        for (let i = 0, len = white_data.length; i < len; i++) {\r\n                            if (i > currentIndex) {\r\n                                white_data[i] = NaN;\r\n                            }\r\n                        }\r\n                    } else if (event.ctrlKey) {\r\n                        fminIndex = currentIndex;\r\n                        for (let i = 0, len = white_data.length; i < len; i++) {\r\n                            if (i < currentIndex) {\r\n                                white_data[i] = NaN;\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (Array.isArray(white_data[currentIndex])) {\r\n                        white_data[currentIndex][1] = currentPosition[1];\r\n                        position = [currentIndex, currentPosition[1]];\r\n                        line.dispatchAction({\r\n                            type: 'showTip',\r\n                            seriesIndex: 0,\r\n                            dataIndex: currentIndex\r\n                        });\r\n                        if (prevPosition) {\r\n                            for (let i = 1; i < Math.abs(prevPosition[0] - currentIndex); i++) {\r\n                                let index = prevPosition[0] > currentIndex ? prevPosition[0] - i : prevPosition[0] + i;\r\n                                let y = prevPosition[1] + (currentPosition[1] - prevPosition[1]) / Math.abs(currentIndex - prevPosition[0]) * i;\r\n                                white_data[index][1] = y;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                let proc_F = [], proc_V = [];\r\n                for (let i = 0, len = white_data.length; i < len; i++) {\r\n                    if (Array.isArray(white_data[i])) {\r\n                        proc_F.push(pshift.f0[i])\r\n                        proc_V.push(white_data[i][1]);\r\n                    }\r\n                }\r\n                disp.v = interp_multiPoint(proc_F, proc_V, proc_F.length, vout, new Array(vout.length), vout.length)\r\n                let pink_data = [], resultY = [];\r\n                for (let i = 0, len = disp.f.length; i < len; i++) {\r\n                    if (disp.f[i] >= pshift.f0[fminIndex] && disp.f[i] <= pshift.f0[fmaxIndex]) {\r\n                        pink_data.push([disp.f[i], disp.v[i]]);\r\n                        resultY.push(disp.v[i]);\r\n                    } else {\r\n                        disp.v[i] = NaN;\r\n                        pink_data.push(NaN);\r\n                        resultY.push(NaN);\r\n                    }\r\n                }\r\n                let black_data = [], black_xData = [], black_yData = [];\r\n                for (let i = 0, len = pink_data.length; i < len; i++) {\r\n                    if (Array.isArray(pink_data[i])) {\r\n                        black_data.push([disp.v[i], disp.v[i] / disp.f[i] / 2]);\r\n                        black_xData.push(disp.v[i]);\r\n                        black_yData.push(disp.v[i] / disp.f[i] / 2);\r\n                    }\r\n                }\r\n                this.updateHMLineData(this.chart1_line, white_data, pink_data);\r\n                this.updateHMLineData(this.chart2_line, white_data, pink_data);\r\n                this.updateHMLineData(this.chart3_line, white_data, pink_data);\r\n                this.updateLineData(this.chart4, black_xData, black_yData, black_data);\r\n                this.setState({ white_data, disp, pink_data, black_data, black_xData, black_yData, resultY, prevPosition: position, fminIndex, fmaxIndex });\r\n            }\r\n        })\r\n        line.getZr().on(\"mouseup\", () => {\r\n            this.setState({ prevPosition: undefined });\r\n        })\r\n        line.getZr().on(\"mouseout\", () => {\r\n            this.setState({ prevPosition: undefined });\r\n        })\r\n        line.getZr().on('click', params => {\r\n            let { event, offsetX } = params;\r\n            let currentPositionX = line.convertFromPixel({ seriesIndex: 0, xAxisIndex: 0 }, [offsetX])[0];\r\n            let { white_data, fminIndex, fmaxIndex } = this.state;\r\n            let distenceArr = white_data.map(position => Math.abs(currentPositionX - position[0]));\r\n            let currentIndex = getMinIndex(distenceArr);\r\n            if (event.button === 0) {\r\n                if (event.shiftKey || event.ctrlKey) {\r\n                    if (event.shiftKey) {\r\n                        fmaxIndex = currentIndex;\r\n                        for (let i = 0, len = white_data.length; i < len; i++) {\r\n                            if (i > currentIndex) {\r\n                                white_data[i] = NaN;\r\n                            }\r\n                        }\r\n                    } else if (event.ctrlKey) {\r\n                        fminIndex = currentIndex;\r\n                        for (let i = 0, len = white_data.length; i < len; i++) {\r\n                            if (i < currentIndex) {\r\n                                white_data[i] = NaN;\r\n                            }\r\n                        }\r\n                    }\r\n                    let { vout, disp, pshift } = this.state;\r\n                    let proc_F = [], proc_V = [];\r\n                    for (let i = 0, len = white_data.length; i < len; i++) {\r\n                        if (Array.isArray(white_data[i])) {\r\n                            proc_F.push(pshift.f0[i])\r\n                            proc_V.push(white_data[i][1]);\r\n                        }\r\n                    }\r\n                    disp.v = interp_multiPoint(proc_F, proc_V, proc_F.length, vout, new Array(vout.length), vout.length)\r\n                    let pink_data = [], resultY = [];\r\n                    for (let i = 0, len = disp.f.length; i < len; i++) {\r\n                        if (disp.f[i] >= pshift.f0[fminIndex] && disp.f[i] <= pshift.f0[fmaxIndex]) {\r\n                            pink_data.push([disp.f[i], disp.v[i]]);\r\n                            resultY.push(disp.v[i]);\r\n                        } else {\r\n                            disp.v[i] = NaN;\r\n                            pink_data.push(NaN);\r\n                            resultY.push(NaN);\r\n                        }\r\n                    }\r\n                    let black_data = [], black_xData = [], black_yData = [];\r\n                    for (let i = 0, len = pink_data.length; i < len; i++) {\r\n                        if (Array.isArray(pink_data[i])) {\r\n                            black_data.push([disp.v[i], disp.v[i] / disp.f[i] / 2]);\r\n                            black_xData.push(disp.v[i]);\r\n                            black_yData.push(disp.v[i] / disp.f[i] / 2);\r\n                        }\r\n                    }\r\n                    this.updateHMLineData(this.chart1_line, white_data, pink_data);\r\n                    this.updateHMLineData(this.chart2_line, white_data, pink_data);\r\n                    this.updateHMLineData(this.chart3_line, white_data, pink_data);\r\n                    this.updateLineData(this.chart4, black_xData, black_yData, black_data);\r\n                    this.setState({ pink_data, black_data, white_data, resultY, disp, fminIndex, fmaxIndex });\r\n                }\r\n            }\r\n        })\r\n    }\r\n    updateHMLineData = (line, white_data, pink_data) => {\r\n        line.setOption({\r\n            series: [\r\n                {\r\n                    id: \"a\",\r\n                    type: 'line',\r\n                    data: white_data,\r\n                },\r\n                {\r\n                    id: \"b\",\r\n                    type: 'line',\r\n                    data: pink_data,\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    lineRender = line => {\r\n        line.setOption({\r\n            tooltip: { formatter: params => 'f: ' + params.data[0].toFixed(4) + '<br>v: ' + params.data[1].toFixed(4) },\r\n            grid: {\r\n                right: 8,\r\n                left: 50,\r\n                top: 20,\r\n                bottom: 40,\r\n            },\r\n            xAxis: {\r\n                type: 'value',\r\n                name: \"Phase velocity (km/s)\",\r\n                nameLocation: \"middle\",\r\n                nameGap: 25,\r\n                show: true,\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                name: \"wavelength/2 (km)\",\r\n                nameLocation: \"middle\",\r\n                nameGap: 25,\r\n                inverse: true,\r\n                show: true,\r\n            },\r\n            series: {\r\n                type: 'line',\r\n                symbol: 'circle',\r\n                smooth: true,\r\n                symbolSize: 2,\r\n                itemStyle: {\r\n                    color: \"#000\"\r\n                }\r\n            }\r\n\r\n        }, true);\r\n    }\r\n    updateLineData = (line, black_xData, black_yData, black_data) => {\r\n        for (let i = 0; i < black_xData.length; i++) {\r\n            if (isNaN(black_xData[i])) {\r\n                black_xData.splice(i, 1);\r\n                i -= 1;\r\n            }\r\n        }\r\n        for (let i = 0; i < black_yData.length; i++) {\r\n            if (isNaN(black_yData[i])) {\r\n                black_yData.splice(i, 1);\r\n                i -= 1;\r\n            }\r\n        }\r\n        line.setOption({\r\n            xAxis: {\r\n                max: black_xData.length > 0 ? formatDecimal(Math.max(...black_xData), 1) + 0.1 : 1,\r\n                min: black_xData.length > 0 ? formatDecimal(Math.min(...black_xData), 1) : 0\r\n            },\r\n            yAxis: {\r\n                max: black_yData.length > 0 ? formatDecimal(Math.max(...black_yData), 1) + 0.1 : 1,\r\n                min: black_yData.length > 0 ? formatDecimal(Math.min(...black_yData), 1) : 0\r\n            },\r\n            series: {\r\n                type: 'line',\r\n                data: black_data,\r\n            }\r\n        })\r\n    }\r\n    handleSelect = selectedKeys => {\r\n        this.handleClear();\r\n        this.getData(selectedKeys);\r\n        this.setState({ fileName: selectedKeys });\r\n    }\r\n    handleChangeInput = (key, e) => {\r\n        this.setState({ [key]: Number(e.target.value) });\r\n    }\r\n    handleChangeData = e => {\r\n        this.setState({\r\n            dataType: e.target.value,\r\n        }, () => {\r\n            if (this.state.loaded) {\r\n                this.getDisp();\r\n            }\r\n        });\r\n    }\r\n    handleCalculate = () => {\r\n        if (this.state.loaded) {\r\n            this.getDisp();\r\n        } else {\r\n            message.info(\"请选择数据文件\");\r\n        }\r\n    }\r\n    handleClear = () => {\r\n        let clearHeatmap = chart => {\r\n            chart.clear();\r\n            chart.setOption({\r\n                grid: {\r\n                    right: 20,\r\n                    left: 60,\r\n                    top: 20,\r\n                    bottom: 40,\r\n                },\r\n                xAxis: {\r\n                    type: 'value',\r\n                    name: \"\",\r\n                    splitNumber: 10,\r\n                    min: 0,\r\n                    max: 1\r\n                },\r\n                yAxis: {\r\n                    type: 'value',\r\n                    name: \"\",\r\n                    splitNumber: 10,\r\n                    min: 0,\r\n                    max: 1,\r\n                    inverse: false\r\n                },\r\n                series: {\r\n                    id: \"a\",\r\n                    type: 'line',\r\n                    data: []\r\n                }\r\n            }, true)\r\n        }\r\n        let clearLine = chart => {\r\n            chart.clear();\r\n            chart.setOption({\r\n                grid: {\r\n                    right: 20,\r\n                    left: 60,\r\n                    top: 20,\r\n                    bottom: 40\r\n                },\r\n                xAxis: {\r\n                    name: \"\",\r\n                    show: false\r\n                },\r\n                yAxis: {\r\n                    name: \"\",\r\n                    show: false\r\n                },\r\n                series: {\r\n                    id: \"a\",\r\n                    type: 'line',\r\n                    data: []\r\n                }\r\n            }, true)\r\n        }\r\n        let clearLine2 = chart => {\r\n            chart.clear();\r\n            chart.setOption({\r\n                grid: {\r\n                    right: 8,\r\n                    left: 50,\r\n                    top: 20,\r\n                    bottom: 40,\r\n                },\r\n                xAxis: {\r\n                    type: 'value',\r\n                    name: \"\",\r\n                    splitNumber: 10,\r\n                    min: 0,\r\n                    max: 1\r\n                },\r\n                yAxis: {\r\n                    type: 'value',\r\n                    name: \"\",\r\n                    splitNumber: 10,\r\n                    min: 0,\r\n                    max: 1,\r\n                    inverse: false\r\n                },\r\n                series: {\r\n                    id: \"a\",\r\n                    type: 'line',\r\n                    data: []\r\n                }\r\n            }, true)\r\n        }\r\n        this.setState({\r\n            loaded: false,\r\n            white_data: [],\r\n            pink_data: [],\r\n            black_data: [],\r\n            black_xData: [],\r\n            black_yData: [],\r\n        }, () => {\r\n            clearHeatmap(this.chart1_heatmap);\r\n            clearLine(this.chart1_line);\r\n            clearHeatmap(this.chart2_heatmap);\r\n            clearLine(this.chart2_line);\r\n            clearHeatmap(this.chart3_heatmap);\r\n            clearLine(this.chart3_line);\r\n            clearLine2(this.chart4);\r\n        });\r\n    }\r\n    handleSave = () => {\r\n        let { resultX, resultY, loaded, fileName } = this.state\r\n        if (loaded) {\r\n            resultY = resultY.map(item => item.toFixed(4))\r\n            var elementA = document.createElement('a');\r\n            elementA.download = fileName + \".disper\";//文件名\r\n            //隐藏dom点不显示\r\n            elementA.style.display = 'none';\r\n            var blob = new Blob([`${resultX} \\r\\n${resultY} `]);//二进制\r\n            elementA.href = URL.createObjectURL(blob);\r\n            elementA.click();\r\n        } else {\r\n            message.info(\"请选择数据文件\");\r\n        }\r\n    }\r\n    openHelpMask = () => {\r\n        let { opacity } = this.state;\r\n        this.setState({ helpMaskVisible: true });\r\n        let timer = setInterval(() => {\r\n            opacity += 0.04;\r\n            this.setState({ opacity });\r\n            if (opacity > 1) clearInterval(timer);\r\n        }, 10)\r\n    }\r\n    closeHelpMask = () => {\r\n        this.setState({ helpMaskVisible: false, opacity: 0 });\r\n    }\r\n    componentWillUnmount() {\r\n        this.chart1_heatmap.dispose();\r\n        this.chart1_line.dispose();\r\n        this.chart2_heatmap.dispose();\r\n        this.chart2_line.dispose();\r\n        this.chart3_heatmap.dispose();\r\n        this.chart3_line.dispose();\r\n        this.chart4.dispose();\r\n        window.removeEventListener(\"resize\", this.handleResize);\r\n        window.removeEventListener(\"keypress\", this.handleKeyPress);\r\n    }\r\n    render() {\r\n        const { treeData, fmin, fmax, Tout_min, dTout, Tout_max, dataType, helpMaskVisible, opacity } = this.state;\r\n        return (\r\n            <div id=\"vis-main\">\r\n                <div style={{ height: \"100%\", display: \"flex\", alignItems: \"flex-start\" }}>\r\n                    <div style={{ width: 300, height: \"100%\" }} >\r\n                        <div className=\"box\" style={{ padding: 0 }}>\r\n                            <div className=\"box-title\">Select a Data</div>\r\n                            <div className=\"box-content\" style={{ display: \"flex\", justifyContent: \"center\", padding: 0 }}>\r\n                                <Tree treeData={treeData} onSelect={this.handleSelect} blockNode={true} checkable={false} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <div className=\"box-title\">Analysis Parameters</div>\r\n                            <div className=\"box-content\">\r\n                                <div className=\"column\">\r\n                                    <div className=\"row\">\r\n                                        <label>fmin</label><Input defaultValue={fmin} onChange={this.handleChangeInput.bind(this, \"fmin\")} />\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <label>fmax</label><Input defaultValue={fmax} onChange={this.handleChangeInput.bind(this, \"fmax\")} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"column\">\r\n                                    <div className=\"row\">\r\n                                        <label>Tout_min</label><Input defaultValue={Tout_min} onChange={this.handleChangeInput.bind(this, \"Tout_min\")} />\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <label>dTout</label><Input defaultValue={dTout} onChange={this.handleChangeInput.bind(this, \"dTout\")} />\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <label>Tout_max</label><Input defaultValue={Tout_max} onChange={this.handleChangeInput.bind(this, \"Tout_max\")} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <Button type=\"primary\" style={{ width: 120 }} onClick={this.handleCalculate}>Calculate</Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <div className=\"box-title\">Select a Method</div>\r\n                            <div className=\"box-content\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                <Radio.Group onChange={this.handleChangeData} defaultValue={dataType}>\r\n                                    <Radio value={\"A2B\"}>A-&gt;B</Radio>\r\n                                    <Radio value={\"B2A\"}>B-&gt;A</Radio>\r\n                                    <Radio value={\"SYM\"}>SYM</Radio>\r\n                                </Radio.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <div className=\"box-title\">Dispersion</div>\r\n                            <div className=\"box-content\" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <Button type=\"primary\" style={{ width: 120 }} onClick={this.handleClear}>Clear</Button>\r\n                                <Button type=\"primary\" style={{ width: 120 }} onClick={this.handleSave}>Save</Button>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ marginTop: 20, textAlign: \"center\" }}>\r\n                            <Button style={{ width: 120 }} onClick={this.openHelpMask}>查看帮助</Button>\r\n                        </div>\r\n                        <div className=\"help-mask\" style={{ display: !helpMaskVisible && \"none\", opacity }} onClick={this.closeHelpMask}>\r\n                            <div className=\"column\">\r\n                                <div className=\"dot-box\">在此选择数据源</div>\r\n                                <div className=\"dot-box\">在此修改计算参数<br />修改完成后点击Calculate即可计算</div>\r\n                                <div className=\"dot-box\">选择线图数据源</div>\r\n                                <div className=\"dot-box\">Clear:清空画布<br />Save:下载数据</div>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <div className=\"dot-box\">\r\n                                    A-&gt;B数据可视化区域<br />\r\n                                    按住鼠标左键在图表上拖动，可修改白线<br />\r\n                                    在图表上Ctrl+左键单击可截断鼠标对应横坐标左侧的白线，Shift+左键单击截断右侧<br />\r\n                                    修改白线后实时插值生成紫线数据并绘制</div>\r\n                                <div className=\"dot-box\">B-&gt;A数据可视化区域<br />操作方式同上</div>\r\n                                <div className=\"dot-box\">SYM数据可视化区域<br />操作方式同上</div>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <div className=\"dot-box\">频散曲线<br />由紫线计算生成</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ position: \"relative\", height: \"100%\", width: \"calc((100% - 300px) / 3 * 2)\" }}>\r\n                        <div className=\"chart-container\">\r\n                            <div id=\"chart1_heatmap\" className=\"chart\" />\r\n                            <div id=\"chart1_line\" className=\"chart\" />\r\n                            <div id=\"chart1_loading_mask\" className=\"loading_mask\"><Spin tip=\"Loading...\" /></div>\r\n                        </div>\r\n                        <div className=\"chart-container\">\r\n                            <div id=\"chart2_heatmap\" className=\"chart\" />\r\n                            <div id=\"chart2_line\" className=\"chart\" />\r\n                            <div id=\"chart2_loading_mask\" className=\"loading_mask\"><Spin tip=\"Loading...\" /></div>\r\n                        </div>\r\n                        <div className=\"chart-container\">\r\n                            <div id=\"chart3_heatmap\" className=\"chart\" />\r\n                            <div id=\"chart3_line\" className=\"chart\" />\r\n                            <div id=\"chart3_loading_mask\" className=\"loading_mask\"><Spin tip=\"Loading...\" /></div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"chart4\" style={{ width: \"calc((100% - 300px) / 3)\", height: \"100%\" }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} "],"sourceRoot":""}