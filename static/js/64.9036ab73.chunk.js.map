{"version":3,"sources":["components/Directory/index.js","components/Documents/CodeReview/6.js"],"names":["index","props","bindHandleScroll","event","scrollTop","srcElement","documentElement","window","pageYOffset","body","setState","scrollToAnchor","anchorName","anchorElement","document","getElementById","scrollIntoView","block","behavior","state","articleTree","getArticleTree","bind","childrens","getElementsByClassName","children","i","len","length","nodeName","id","innerText","push","name","tag","this","pathSnippets","location","pathname","split","filter","TOTAL_DATA","getElementsByTagName","innerHTML","section","title","setTitle","header","before","scrollY","directory","offsetTop","addEventListener","onscroll","footer","H","offsetParent","s","offsetHeight","style","after","className","removeEventListener","array","targetObj","targetIndex","findIndex","n","map","key","paddingLeft","onClick","Component","withRouter","to","href","target","rel"],"mappings":"wKAMMA,G,wDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA2EVC,iBAAmB,SAACC,GAChB,IAAMC,IAAaD,EAAME,YAAaF,EAAME,WAAWC,gBAAgBF,WAChEG,OAAOC,cACNL,EAAME,WAAaF,EAAME,WAAWI,KAAKL,UAAY,GAC7D,EAAKM,SAAS,CAAEN,eAhFD,EAsFnBO,eAAiB,SAACC,GACd,GAAIA,EAAY,CACZ,IAAIC,EAAgBC,SAASC,eAAeH,GACxCC,GACAA,EAAcG,eAAe,CACzBC,MAAO,QACPC,SAAU,aA1FtB,EAAKC,MAAQ,CACTC,YAAa,GACbhB,UAAW,MAEf,EAAKiB,eAAiB,EAAKA,eAAeC,KAApB,gBANP,E,6DAWf,IAFA,IAAIC,EAAYT,SAASU,uBAAuB,mBAAmB,GAAGC,SAClEL,EAAc,GACTM,EAAI,EAAGC,EAAMJ,EAAUK,OAAQF,EAAIC,EAAM,EAAGD,IAAK,CACtD,IAAIG,EAAWN,EAAUG,GAAGG,SACX,OAAbA,GAAkC,OAAbA,IACrBN,EAAUG,GAAGI,GAAKP,EAAUG,GAAGK,UAC/BX,EAAYY,KAAK,CACbC,KAAMV,EAAUG,GAAGK,UACnBG,IAAKX,EAAUG,GAAGG,YAI9BM,KAAKzB,SAAS,CAAEU,kB,iCAKhB,IAFA,IACMgB,EADKD,KAAKlC,MAAMoC,SAASC,SACLC,MAAM,KAAKC,QAAO,SAAAd,GAAC,OAAIA,KACxCA,EAAI,EAAGC,EAAMc,IAAWb,OAAQF,EAAIC,EAAKD,IAC1CU,EAAa,KAAOK,IAAWf,GAAGO,OAClCnB,SAAS4B,qBAAqB,MAAM,GAAGC,UAAYF,IAAWf,GAAGkB,QAAQhB,OAAS,EAAIa,IAAWf,GAAGkB,QAAQR,EAAaA,EAAaR,OAAS,IAAMa,IAAWf,GAAGmB,S,0CAM3KV,KAAKd,iBACLc,KAAKW,WAEL,IAAIC,EAASjC,SAASC,eAAe,UACjCiC,EAASzC,OAAO0C,QAChBC,EAAYpC,SAASU,uBAAuB,kBAAkB,GAE9D2B,EAAYD,EAAUC,UAC1B5C,OAAO6C,iBAAiB,SAAUjB,KAAKjC,kBACvCK,OAAO8C,SAAW,WAEd,IADA,IAAIC,EAASxC,SAASU,uBAAuB,eAAe,GAAI+B,EAAI,EAC7DD,GAEHC,GAAKD,EAAOH,UACZG,EAASA,EAAOE,aAEpB,IAAIC,EAAI3C,SAASL,KAAKL,WAAaU,SAASR,gBAAgBF,UAI5D,IAFAqD,GAASN,EAAYD,EAAUQ,cAEvBH,EAAIR,EAAOW,aACfR,EAAUS,MAAV,6BAAwCR,EAAYM,EAAIF,EAAxD,0BACG,CAEH,IAAIK,EAAQrD,OAAO0C,QACfW,EAAQb,EAAOW,eACXV,EAASY,IACTb,EAAOc,UAAY,0CACnBX,EAAUW,UAAY,mCACtBb,EAASY,GAETZ,EAASY,IACTb,EAAOc,UAAY,0CACnBX,EAAUW,UAAY,iBACtBb,EAASY,IAGjBV,EAAUS,MAAQ,O,6CAY1BpD,OAAOuD,oBAAoB,SAAU3B,KAAKjC,oB,+BAcpC,IAAD,SAC4BiC,KAAKhB,MAAhCC,EADD,EACCA,YAAahB,EADd,EACcA,UACfwB,EAASR,EAAYQ,OACzB,GAAId,SAASC,eAAT,eAAyCa,EAAS,EAAG,CAGrD,IAFA,IAAImC,EAAQ,GAEHrC,EAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC7B,IAAIsC,EAAYlD,SAASC,eAAeK,EAAYM,GAAGO,MACvD8B,EAAM/B,KAAKgC,EAAUb,WAIzB,IADA,IAAIc,EAAcF,EAAMG,WAAU,SAAAC,GAAC,OAAIA,EAAI/D,KAAa,EAC/CsB,EAAI,EAAGA,EAAIE,EAAQF,IACJZ,SAASC,eAAT,mBAAoCW,IAAKmC,UAA7DnC,IAAMuC,EAAmE,iCAAwF,YAGhJ,IAAjBA,IACAnD,SAASC,eAAT,mBAAoCa,EAAS,IAAKiC,UAAY,kCAGtE,OACI,yBAAKA,UAAU,aACX,wBAAIA,UAAU,kBACTzC,EAAYgD,KAAI,SAACC,EAAKrE,GAAN,OACb,wBAAIqE,IAAKrE,EAAO8B,GAAE,mBAAc9B,GAAS6D,UAAU,WAAWhB,MAAOwB,EAAIpC,KAAM0B,MAAO,CAAEW,YAAyB,OAAZD,EAAInC,IAAe,GAAK,IAAMqC,QAAS,WAAQ,EAAK5D,eAAL,UAAuB0D,EAAIpC,SAAYoC,EAAIpC,e,GA1HnMuC,cAkILC,gBAAWzE,I,yKCpILA,E,uKAEb,OACI,yBAAK6D,UAAU,gBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iBACX,uIAEJ,yBAAKA,UAAU,mBACX,uBAAGA,UAAU,YAAb,8OACA,+DACA,uBAAGA,UAAU,YAAb,wrBACA,uBAAGA,UAAU,YAAb,ohBACA,uBAAGA,UAAU,YAAb,+bAAkG,+HAAlG,UACA,uBAAGA,UAAU,YAAb,uOAA8D,kBAAC,IAAD,CAAMa,GAAG,iBAAT,gBAA9D,4KACA,8DACA,uBAAGb,UAAU,YAAb,ykBAAyH,kBAAC,IAAD,CAAMa,GAAG,iBAAT,gBAAzH,+SAA6M,kBAAC,IAAD,CAAMA,GAAG,iBAAT,8CAA7M,0GACA,wDACA,uBAAGb,UAAU,YAAb,4tDACA,uBAAGA,UAAU,YAAb,6JAAqD,uBAAGc,KAAK,4EAA4EC,OAAO,SAASC,IAAI,uBAAxG,4BAArD,ihBACA,sFACA,uBAAGhB,UAAU,YAAb,6UAA+E,kBAAC,IAAD,CAAMa,GAAG,iBAAT,gBAA/E,kFACA,uBAAGb,UAAU,YAAb,8vBACA,wDACA,uBAAGA,UAAU,YAAb,mPAAgE,kBAAC,IAAD,CAAMa,GAAG,iBAAT,wCAAhE,wHAGR,kBAAC,IAAD,W,GA3BmBF","file":"static/js/64.9036ab73.chunk.js","sourcesContent":["//文档右侧标题导航\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TOTAL_DATA } from \"../../assets/data\";\r\nimport \"./index.less\";\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            articleTree: [],\r\n            scrollTop: null\r\n        }\r\n        this.getArticleTree = this.getArticleTree.bind(this);\r\n    }\r\n    getArticleTree() {\r\n        let childrens = document.getElementsByClassName(\"article-content\")[0].children;\r\n        let articleTree = [];\r\n        for (let i = 0, len = childrens.length; i < len - 1; i++) {\r\n            let nodeName = childrens[i].nodeName;\r\n            if (nodeName === \"H2\" || nodeName === \"H3\") {\r\n                childrens[i].id = childrens[i].innerText;\r\n                articleTree.push({\r\n                    name: childrens[i].innerText,\r\n                    tag: childrens[i].nodeName\r\n                });\r\n            }\r\n        }\r\n        this.setState({ articleTree });\r\n    }\r\n    setTitle() {\r\n        let path = this.props.location.pathname;\r\n        const pathSnippets = path.split('/').filter(i => i);\r\n        for (let i = 0, len = TOTAL_DATA.length; i < len; i++) {\r\n            if (pathSnippets[0] === TOTAL_DATA[i].name) {\r\n                document.getElementsByTagName(\"h1\")[0].innerHTML = TOTAL_DATA[i].section.length > 0 ? TOTAL_DATA[i].section[pathSnippets[pathSnippets.length - 1]] : TOTAL_DATA[i].title;\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //获取文档标题树\r\n        this.getArticleTree();\r\n        this.setTitle();\r\n        //页面滚动到文档末尾时，将directory逐渐向上隐藏\r\n        let header = document.getElementById(\"header\");\r\n        let before = window.scrollY;\r\n        let directory = document.getElementsByClassName(\"directory-list\")[0];\r\n        //offsetTop为页面加载时directory距顶端的距离\r\n        let offsetTop = directory.offsetTop;\r\n        window.addEventListener('scroll', this.bindHandleScroll);\r\n        window.onscroll = function () {\r\n            let footer = document.getElementsByClassName(\"page-footer\")[0], H = 0;\r\n            while (footer) {\r\n                //H为footer距顶端的距离\r\n                H += footer.offsetTop;\r\n                footer = footer.offsetParent;\r\n            }\r\n            let s = document.body.scrollTop || document.documentElement.scrollTop;\r\n            //s为当前滚动距离加offsetTop加directory高度,即directory底端距顶部的距离\r\n            s = s + (offsetTop + directory.offsetHeight);\r\n            //当s超出H时,directory向上收起\r\n            if (s > H + header.offsetHeight) {\r\n                directory.style = `position:fixed;top:${offsetTop - s + H}px;transition:none`;\r\n            } else {\r\n                // 在s<=H时,若向下滚动时,滚动距离超过header高度将header收起;向上滚动则将header显示,并且directory随header平移\r\n                let after = window.scrollY;\r\n                if (after > header.offsetHeight) {\r\n                    if (before < after) {\r\n                        header.className = \"ant-layout-header header header-affixed\";\r\n                        directory.className = \"directory-list directory-affixed\"\r\n                        before = after;\r\n                    };\r\n                    if (before > after) {\r\n                        header.className = \"ant-layout-header header header-visible\";\r\n                        directory.className = \"directory-list\"\r\n                        before = after;\r\n                    };\r\n                }\r\n                directory.style = \"\";\r\n            }\r\n        }\r\n    }\r\n    //获取滚动条滚动的高度\r\n    bindHandleScroll = (event) => {\r\n        const scrollTop = (event.srcElement ? event.srcElement.documentElement.scrollTop : false)\r\n            || window.pageYOffset\r\n            || (event.srcElement ? event.srcElement.body.scrollTop : 0);\r\n        this.setState({ scrollTop });\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.bindHandleScroll);\r\n    }\r\n    //点击directory跳转到锚点\r\n    scrollToAnchor = (anchorName) => {\r\n        if (anchorName) {\r\n            let anchorElement = document.getElementById(anchorName);\r\n            if (anchorElement) {\r\n                anchorElement.scrollIntoView({\r\n                    block: 'start',\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let { articleTree, scrollTop } = this.state;\r\n        let length = articleTree.length;\r\n        if (document.getElementById(`tree-num-0`) && length > 0) {\r\n            let array = [];\r\n            //array内为所有锚点的offsetTop,从小到大排列\r\n            for (let i = 0; i < length; i++) {\r\n                let targetObj = document.getElementById(articleTree[i].name);\r\n                array.push(targetObj.offsetTop);\r\n            }\r\n            //targetIndex为array中第一个大于当前滚动距离的值的index,通过offsetTop判断当前滚动到哪个锚点,并改变对应的标题导航样式。\r\n            let targetIndex = array.findIndex(n => n > scrollTop) - 1;\r\n            for (let i = 0; i < length; i++) {\r\n                i === targetIndex ? document.getElementById(`tree-num-${i}`).className = \"tree-num directory-item-active\" : document.getElementById(`tree-num-${i}`).className = \"tree-num\";\r\n            }\r\n            //当滚动距离超过最后一个锚点时,array中找不到,返回-1\r\n            if (targetIndex === -2) {\r\n                document.getElementById(`tree-num-${length - 1}`).className = \"tree-num directory-item-active\";\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"directory\">\r\n                <ul className=\"directory-list\">\r\n                    {articleTree.map((key, index) =>\r\n                        <li key={index} id={`tree-num-${index}`} className=\"tree-num\" title={key.name} style={{ paddingLeft: key.tag === \"H2\" ? 10 : 22 }} onClick={() => { this.scrollToAnchor(`${key.name}`) }}>{key.name}</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(index);","import React, { Component } from 'react';\r\nimport Directory from \"../../Directory\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class index extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page-content\">\r\n                <div className=\"article\">\r\n                    <div className=\"article-title\">\r\n                        <h1>如何处理评审后程序员拒绝修改的情况</h1>\r\n                    </div>\r\n                    <div className=\"article-content\">\r\n                        <p className=\"indent-2\">有时开发人员会推迟代码评审。要么他们不同意你的建议，要么他们会抱怨你太严格了。</p>\r\n                        <h2>谁是正确的?</h2>\r\n                        <p className=\"indent-2\">当开发人员不同意您的建议时，首先花点时间考虑一下它们是否正确。通常，他们比您更接近代码，因此他们可能对代码的某些方面有更好的了解。他们的论点有道理吗?从代码健康的角度来看，这有意义吗?如果是这样，让他们知道他们是对的，让这个问题消失。</p>\r\n                        <p className=\"indent-2\">然而，开发人员并不总是正确的。在这种情况下，评审人员应该进一步解释为什么他们认为他们的建议是正确的。一个好的解释说明了对开发人员的回答的理解，以及关于为什么需要更改的附加信息。</p>\r\n                        <p className=\"indent-2\">特别是，当评审人员认为他们的建议将改善代码的健康状况时，如果他们认为所产生的代码质量改进能够证明所要求的额外工作是合理的，那么他们应该继续提倡更改。<b>改善代码健康状况往往是一些小步骤</b>。</p>\r\n                        <p className=\"indent-2\">有时候，在你真正理解一个建议之前，你需要花几轮时间来解释它。只要确保始终保持<Link to=\"/codereview/5\">礼貌</Link>，并让开发人员知道您听到了他们在说什么，只是暂时不同意。</p>\r\n                        <h2>扰乱开发者</h2>\r\n                        <p className=\"indent-2\">评审人员有时认为，如果评审人员坚持要进行改进，开发人员会感到不安。有时候开发人员确实会感到沮丧，但是这通常是很短暂的，之后他们会非常感谢您帮助他们提高了代码的质量。通常，如果您在评论中表现得很有<Link to=\"/codereview/5\">礼貌</Link>，开发人员实际上一点也不会感到不安，而这种担心只存在于评审人员的脑海中。通常，令人不安的地方更多的是<Link to=\"/codereview/5\">评论的编写方式</Link>，而不是评审人员对代码质量的坚持。</p>\r\n                        <h2>稍后处理</h2>\r\n                        <p className=\"indent-2\">一个常见的抵制原因是开发人员(可以理解)希望完成任务。他们不想通过另一轮的评审来得到这个 CL 。所以他们说他们会在以后的 CL 中处理一些东西，所以你现在应该 LGTM 这个 CL 。一些开发人员对此非常擅长，他们将立即编写一个后续 CL 来解决这个问题。然而，经验表明，随着开发人员编写原始 CL 的时间越长，这种处理发生的可能性就越小。事实上，除非开发人员在当前 CL 之后立即进行处理，否则通常不会发生这种情况。这并不是因为开发人员不负责任，而是因为他们有很多工作要做，处理工作在其他工作的压力下丢失或遗忘了。因此，通常最好坚持开发人员现在就处理他们的 CL ，在代码进入代码库并“完成”之前。让人们“稍后处理”是代码库退化的常见方式。</p>\r\n                        <p className=\"indent-2\">如果 CL 引入了新的复杂性，在提交之前必须处理它，除非是<a href=\"https://github.com/google/eng-practices/blob/master/review/emergencies.md\" target=\"_blank\" rel=\"noopener noreferrer\">紧急情况</a>。如果 CL 暴露了周围的问题，而这些问题现在还无法解决，开发人员应该为处理工作提交一个 bug 文件，并将其分配给自己，这样它就不会丢失。他们还可以选择在引用已归档错误的代码中编写 TODO 注释。</p>\r\n                        <h2>关于严格的一般投诉</h2>\r\n                        <p className=\"indent-2\">如果您以前有相当松散的代码评审，而现在您转而进行严格的评审，那么一些开发人员将会非常大声地抱怨。提高代码评审的<Link to=\"/codereview/4\">速度</Link>通常会使这些抱怨逐渐消失。</p>\r\n                        <p className=\"indent-2\">有时候，这些抱怨可能需要几个月的时间才能消除，但最终开发人员往往会看到严格的代码评审的价值，因为他们看到了严格的代码评审有助于生成什么优秀的代码。有时候，最大声的抗议者甚至会成为你最坚定的支持者，一旦发生了一些事情，让他们真正看到了你的严厉所带来的价值。</p>\r\n                        <h2>解决冲突</h2>\r\n                        <p className=\"indent-2\">如果您遵循上述所有方法，但是您仍然遇到您自己和开发人员之间无法解决的冲突，请参阅<Link to=\"/codereview/1\">代码评审标准</Link>，了解有助于解决冲突的指导原则和原则。</p>\r\n                    </div>\r\n                </div>\r\n                <Directory />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}