{"version":3,"sources":["../node_modules/codemirror/mode/slim/slim.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/ruby/ruby.js"],"names":["CodeMirror","defineMode","config","htmlMode","getMode","name","rubyMode","modes","html","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","push","RegExp","join","styleMap","closing","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","continueLine","state","column","stack","parent","style","indented","tokenize","line","finishContinue","rubyInQuote","endQuote","stream","peek","rubyState","length","next","startRubySplat","runSplat","context","prev","backUp","eatSpace","startState","token","match","pat","offset","cur","current","idx","search","pos","restore","backup","maybeBackup","htmlState","startHtmlLine","lastTokenize","htmlLine","eol","startHtmlMode","comment","skipToEnd","attributeWrapper","eat","attributeWrapperAssign","attributeWrapperValue","ch","readQuoted","sub","subStream","StringStream","string","slice","tabSize","start","lastColumnPos","lastColumnValue","subMode","subState","firstSub","mode","hasOwnProperty","query","spec","mimeModes","factory","createMode","doctypeLine","_state","startLine","commentMode","lineContinuable","m","startSubMode","slimTag","slim","startOfLine","slimTagExtras","slimClass","slimAttribute","startAttributeWrapperMode","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","quote","embed","unescaped","nextTokenize","fresh","escaped","last","copyState","sol","indentation","blankLine","innerMode","defineMIME","mod","require","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","prop","inText","chain","parser","inBlock","eatWhile","doctype","depth","inTag","baseState","tagName","tagStart","test","closure","isInAttribute","inAttribute","stringStartCol","terminator","Context","this","indent","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","textAfter","fullLine","Pass","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","tags","configTags","configScript","scriptTypes","matches","toLowerCase","modeSpec","tagInfo","tagText","findMatchingMode","endTagA","endTag","localState","localMode","local","wordObj","words","o","e","curPunc","keywords","indentWords","dedentWords","opening","newtok","tokenBase","readBlockComment","phrase","mayIndent","found","indexOf","regexpAhead","delim","propertyIsEnumerable","pop","varList","lastTok","more","tokenBaseUntilBrace","tokenBaseOnce","alreadyCalled","continuedLine","kwtype","thisTok","word","firstChar","charAt","ct","closed","lineComment","fold"],"mappings":"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","file":"static/js/96.f67369eb.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n    \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n    \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n    \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n    \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n    \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n  ]);\n  var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                             \"catch\", \"loop\", \"proc\", \"begin\"]);\n  var dedentWords = wordObj([\"end\", \"until\"]);\n  var opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\n  var closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\n});\n"],"sourceRoot":""}