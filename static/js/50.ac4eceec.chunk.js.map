{"version":3,"sources":["components/Directory/index.js","../node_modules/codemirror/mode lazy /^/.*/.js$/ groupOptions: {} namespace object","components/Documents/GOJS/6.js"],"names":["index","props","bindHandleScroll","event","scrollTop","srcElement","documentElement","window","pageYOffset","body","setState","scrollToAnchor","anchorName","anchorElement","document","getElementById","scrollIntoView","block","behavior","state","articleTree","getArticleTree","bind","childrens","getElementsByClassName","children","i","len","length","nodeName","id","innerText","push","name","tag","this","pathSnippets","location","pathname","split","filter","TOTAL_DATA","getElementsByTagName","innerHTML","section","title","setTitle","header","before","scrollY","directory","offsetTop","addEventListener","onscroll","footer","H","offsetParent","s","offsetHeight","style","after","className","removeEventListener","array","targetObj","targetIndex","findIndex","n","map","key","paddingLeft","onClick","Component","withRouter","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","all","slice","t","keys","Object","module","exports","$","go","GraphObject","make","codeMirrorOptions","theme","mode","readOnly","diagramRender1","diagramRender2","diagramRender3","diagramRender4","diagramRender5","diagramRender6","diagramRender7","diagramRender8","myDiagram","Diagram","nodeTemplate","Node","Shape","figure","fill","Binding","TextBlock","margin","model","GraphLinksModel","color","from","to","initialContentAlignment","Spot","Center","c","nodeTemplateMap","add","desiredSize","Size","category","Panel","alignment","Right","Left","groupTemplateMap","Group","Placeholder","padding","isGroup","group","linkTemplateMap","Link","toArrow","segmentOffset","Point","value","options","data-lake-indent","src","require","alt","maxWidth","href","target","rel"],"mappings":"wKAMMA,G,wDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA2EVC,iBAAmB,SAACC,GAChB,IAAMC,IAAaD,EAAME,YAAaF,EAAME,WAAWC,gBAAgBF,WAChEG,OAAOC,cACNL,EAAME,WAAaF,EAAME,WAAWI,KAAKL,UAAY,GAC7D,EAAKM,SAAS,CAAEN,eAhFD,EAsFnBO,eAAiB,SAACC,GACd,GAAIA,EAAY,CACZ,IAAIC,EAAgBC,SAASC,eAAeH,GACxCC,GACAA,EAAcG,eAAe,CACzBC,MAAO,QACPC,SAAU,aA1FtB,EAAKC,MAAQ,CACTC,YAAa,GACbhB,UAAW,MAEf,EAAKiB,eAAiB,EAAKA,eAAeC,KAApB,gBANP,E,6DAWf,IAFA,IAAIC,EAAYT,SAASU,uBAAuB,mBAAmB,GAAGC,SAClEL,EAAc,GACTM,EAAI,EAAGC,EAAMJ,EAAUK,OAAQF,EAAIC,EAAM,EAAGD,IAAK,CACtD,IAAIG,EAAWN,EAAUG,GAAGG,SACX,OAAbA,GAAkC,OAAbA,IACrBN,EAAUG,GAAGI,GAAKP,EAAUG,GAAGK,UAC/BX,EAAYY,KAAK,CACbC,KAAMV,EAAUG,GAAGK,UACnBG,IAAKX,EAAUG,GAAGG,YAI9BM,KAAKzB,SAAS,CAAEU,kB,iCAKhB,IAFA,IACMgB,EADKD,KAAKlC,MAAMoC,SAASC,SACLC,MAAM,KAAKC,QAAO,SAAAd,GAAC,OAAIA,KACxCA,EAAI,EAAGC,EAAMc,IAAWb,OAAQF,EAAIC,EAAKD,IAC1CU,EAAa,KAAOK,IAAWf,GAAGO,OAClCnB,SAAS4B,qBAAqB,MAAM,GAAGC,UAAYF,IAAWf,GAAGkB,QAAQhB,OAAS,EAAIa,IAAWf,GAAGkB,QAAQR,EAAaA,EAAaR,OAAS,IAAMa,IAAWf,GAAGmB,S,0CAM3KV,KAAKd,iBACLc,KAAKW,WAEL,IAAIC,EAASjC,SAASC,eAAe,UACjCiC,EAASzC,OAAO0C,QAChBC,EAAYpC,SAASU,uBAAuB,kBAAkB,GAE9D2B,EAAYD,EAAUC,UAC1B5C,OAAO6C,iBAAiB,SAAUjB,KAAKjC,kBACvCK,OAAO8C,SAAW,WAEd,IADA,IAAIC,EAASxC,SAASU,uBAAuB,eAAe,GAAI+B,EAAI,EAC7DD,GAEHC,GAAKD,EAAOH,UACZG,EAASA,EAAOE,aAEpB,IAAIC,EAAI3C,SAASL,KAAKL,WAAaU,SAASR,gBAAgBF,UAI5D,IAFAqD,GAASN,EAAYD,EAAUQ,cAEvBH,EAAIR,EAAOW,aACfR,EAAUS,MAAV,6BAAwCR,EAAYM,EAAIF,EAAxD,0BACG,CAEH,IAAIK,EAAQrD,OAAO0C,QACfW,EAAQb,EAAOW,eACXV,EAASY,IACTb,EAAOc,UAAY,0CACnBX,EAAUW,UAAY,mCACtBb,EAASY,GAETZ,EAASY,IACTb,EAAOc,UAAY,0CACnBX,EAAUW,UAAY,iBACtBb,EAASY,IAGjBV,EAAUS,MAAQ,O,6CAY1BpD,OAAOuD,oBAAoB,SAAU3B,KAAKjC,oB,+BAcpC,IAAD,SAC4BiC,KAAKhB,MAAhCC,EADD,EACCA,YAAahB,EADd,EACcA,UACfwB,EAASR,EAAYQ,OACzB,GAAId,SAASC,eAAT,eAAyCa,EAAS,EAAG,CAGrD,IAFA,IAAImC,EAAQ,GAEHrC,EAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC7B,IAAIsC,EAAYlD,SAASC,eAAeK,EAAYM,GAAGO,MACvD8B,EAAM/B,KAAKgC,EAAUb,WAIzB,IADA,IAAIc,EAAcF,EAAMG,WAAU,SAAAC,GAAC,OAAIA,EAAI/D,KAAa,EAC/CsB,EAAI,EAAGA,EAAIE,EAAQF,IACJZ,SAASC,eAAT,mBAAoCW,IAAKmC,UAA7DnC,IAAMuC,EAAmE,iCAAwF,YAGhJ,IAAjBA,IACAnD,SAASC,eAAT,mBAAoCa,EAAS,IAAKiC,UAAY,kCAGtE,OACI,yBAAKA,UAAU,aACX,wBAAIA,UAAU,kBACTzC,EAAYgD,KAAI,SAACC,EAAKrE,GAAN,OACb,wBAAIqE,IAAKrE,EAAO8B,GAAE,mBAAc9B,GAAS6D,UAAU,WAAWhB,MAAOwB,EAAIpC,KAAM0B,MAAO,CAAEW,YAAyB,OAAZD,EAAInC,IAAe,GAAK,IAAMqC,QAAS,WAAQ,EAAK5D,eAAL,UAAuB0D,EAAIpC,SAAYoC,EAAIpC,e,GA1HnMuC,cAkILC,gBAAWzE,I,wCCxI1B,IAAIoE,EAAM,CACT,eAAgB,CACf,GACA,KAED,6BAA8B,CAC7B,GACA,KAED,mBAAoB,CACnB,GACA,KAED,yBAA0B,CACzB,GACA,KAED,2BAA4B,CAC3B,GACA,KAED,mBAAoB,CACnB,GACA,GAED,uBAAwB,CACvB,GACA,KAED,mBAAoB,CACnB,GACA,KAED,mBAAoB,CACnB,GACA,KAED,iCAAkC,CACjC,GACA,KAED,6BAA8B,CAC7B,GACA,KAED,uBAAwB,CACvB,GACA,KAED,eAAgB,CACf,GACA,GAED,qBAAsB,CACrB,GACA,KAED,WAAY,CACX,GACA,KAED,iBAAkB,CACjB,GACA,EACA,KAED,iBAAkB,CACjB,GACA,KAED,qBAAsB,CACrB,GACA,EACA,EACA,IAED,6BAA8B,CAC7B,GACA,KAED,eAAgB,CACf,GACA,KAED,mBAAoB,CACnB,GACA,KAED,iBAAkB,CACjB,GACA,KAED,eAAgB,CACf,GACA,KAED,qBAAsB,CACrB,GACA,KAED,eAAgB,CACf,GACA,KAED,qBAAsB,CACrB,GACA,KAED,qBAAsB,CACrB,GACA,KAED,eAAgB,CACf,GACA,KAED,mBAAoB,CACnB,GACA,KAED,uBAAwB,CACvB,GACA,KAED,eAAgB,CACf,GACA,KAED,eAAgB,CACf,GACA,GACA,KAED,uBAAwB,CACvB,GACA,KAED,aAAc,CACb,GACA,KAED,qBAAsB,CACrB,GACA,KAED,iBAAkB,CACjB,IACA,EACA,EACA,IAED,6BAA8B,CAC7B,GACA,KAED,yCAA0C,CACzC,IACA,KAED,uBAAwB,CACvB,GACA,KAED,iBAAkB,CACjB,IACA,KAED,iCAAkC,CACjC,IACA,EACA,EACA,IAED,2BAA4B,CAC3B,GACA,EACA,EACA,KAED,iBAAkB,CACjB,IACA,KAED,eAAgB,CACf,IACA,KAED,6BAA8B,CAC7B,GACA,GAED,qBAAsB,CACrB,IACA,KAED,eAAgB,CACf,IACA,EACA,KAED,mBAAoB,CACnB,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,eAAgB,CACf,IACA,KAED,yBAA0B,CACzB,GACA,IAED,+BAAgC,CAC/B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,YAAa,CACZ,IAED,iBAAkB,CACjB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,aAAc,CACb,IACA,KAED,qBAAsB,CACrB,IACA,KAED,mBAAoB,CACnB,IACA,EACA,KAED,iBAAkB,CACjB,IACA,KAED,eAAgB,CACf,IACA,EACA,EACA,EACA,KAED,eAAgB,CACf,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,yBAA0B,CACzB,IACA,KAED,eAAgB,CACf,GACA,EACA,EACA,IAED,qBAAsB,CACrB,IACA,KAED,qBAAsB,CACrB,GACA,KAED,WAAY,CACX,IACA,KAED,WAAY,CACX,IACA,KAED,eAAgB,CACf,IACA,KAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,GACA,KAED,iBAAkB,CACjB,IACA,KAED,eAAgB,CACf,IACA,KAED,iBAAkB,CACjB,GACA,EACA,KAED,qBAAsB,CACrB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,iBAAkB,CACjB,IACA,EACA,EACA,IAED,2BAA4B,CAC3B,IACA,KAED,qBAAsB,CACrB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,eAAgB,CACf,IACA,EACA,EACA,KAED,qBAAsB,CACrB,IACA,KAED,+BAAgC,CAC/B,IACA,KAED,eAAgB,CACf,IACA,KAED,iBAAkB,CACjB,GACA,KAED,qBAAsB,CACrB,GACA,IAED,mBAAoB,CACnB,IACA,KAED,eAAgB,CACf,IACA,KAED,uBAAwB,CACvB,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,iBAAkB,CACj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","file":"static/js/50.ac4eceec.chunk.js","sourcesContent":["//文档右侧标题导航\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TOTAL_DATA } from \"../../assets/data\";\r\nimport \"./index.less\";\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            articleTree: [],\r\n            scrollTop: null\r\n        }\r\n        this.getArticleTree = this.getArticleTree.bind(this);\r\n    }\r\n    getArticleTree() {\r\n        let childrens = document.getElementsByClassName(\"article-content\")[0].children;\r\n        let articleTree = [];\r\n        for (let i = 0, len = childrens.length; i < len - 1; i++) {\r\n            let nodeName = childrens[i].nodeName;\r\n            if (nodeName === \"H2\" || nodeName === \"H3\") {\r\n                childrens[i].id = childrens[i].innerText;\r\n                articleTree.push({\r\n                    name: childrens[i].innerText,\r\n                    tag: childrens[i].nodeName\r\n                });\r\n            }\r\n        }\r\n        this.setState({ articleTree });\r\n    }\r\n    setTitle() {\r\n        let path = this.props.location.pathname;\r\n        const pathSnippets = path.split('/').filter(i => i);\r\n        for (let i = 0, len = TOTAL_DATA.length; i < len; i++) {\r\n            if (pathSnippets[0] === TOTAL_DATA[i].name) {\r\n                document.getElementsByTagName(\"h1\")[0].innerHTML = TOTAL_DATA[i].section.length > 0 ? TOTAL_DATA[i].section[pathSnippets[pathSnippets.length - 1]] : TOTAL_DATA[i].title;\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //获取文档标题树\r\n        this.getArticleTree();\r\n        this.setTitle();\r\n        //页面滚动到文档末尾时，将directory逐渐向上隐藏\r\n        let header = document.getElementById(\"header\");\r\n        let before = window.scrollY;\r\n        let directory = document.getElementsByClassName(\"directory-list\")[0];\r\n        //offsetTop为页面加载时directory距顶端的距离\r\n        let offsetTop = directory.offsetTop;\r\n        window.addEventListener('scroll', this.bindHandleScroll);\r\n        window.onscroll = function () {\r\n            let footer = document.getElementsByClassName(\"page-footer\")[0], H = 0;\r\n            while (footer) {\r\n                //H为footer距顶端的距离\r\n                H += footer.offsetTop;\r\n                footer = footer.offsetParent;\r\n            }\r\n            let s = document.body.scrollTop || document.documentElement.scrollTop;\r\n            //s为当前滚动距离加offsetTop加directory高度,即directory底端距顶部的距离\r\n            s = s + (offsetTop + directory.offsetHeight);\r\n            //当s超出H时,directory向上收起\r\n            if (s > H + header.offsetHeight) {\r\n                directory.style = `position:fixed;top:${offsetTop - s + H}px;transition:none`;\r\n            } else {\r\n                // 在s<=H时,若向下滚动时,滚动距离超过header高度将header收起;向上滚动则将header显示,并且directory随header平移\r\n                let after = window.scrollY;\r\n                if (after > header.offsetHeight) {\r\n                    if (before < after) {\r\n                        header.className = \"ant-layout-header header header-affixed\";\r\n                        directory.className = \"directory-list directory-affixed\"\r\n                        before = after;\r\n                    };\r\n                    if (before > after) {\r\n                        header.className = \"ant-layout-header header header-visible\";\r\n                        directory.className = \"directory-list\"\r\n                        before = after;\r\n                    };\r\n                }\r\n                directory.style = \"\";\r\n            }\r\n        }\r\n    }\r\n    //获取滚动条滚动的高度\r\n    bindHandleScroll = (event) => {\r\n        const scrollTop = (event.srcElement ? event.srcElement.documentElement.scrollTop : false)\r\n            || window.pageYOffset\r\n            || (event.srcElement ? event.srcElement.body.scrollTop : 0);\r\n        this.setState({ scrollTop });\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.bindHandleScroll);\r\n    }\r\n    //点击directory跳转到锚点\r\n    scrollToAnchor = (anchorName) => {\r\n        if (anchorName) {\r\n            let anchorElement = document.getElementById(anchorName);\r\n            if (anchorElement) {\r\n                anchorElement.scrollIntoView({\r\n                    block: 'start',\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let { articleTree, scrollTop } = this.state;\r\n        let length = articleTree.length;\r\n        if (document.getElementById(`tree-num-0`) && length > 0) {\r\n            let array = [];\r\n            //array内为所有锚点的offsetTop,从小到大排列\r\n            for (let i = 0; i < length; i++) {\r\n                let targetObj = document.getElementById(articleTree[i].name);\r\n                array.push(targetObj.offsetTop);\r\n            }\r\n            //targetIndex为array中第一个大于当前滚动距离的值的index,通过offsetTop判断当前滚动到哪个锚点,并改变对应的标题导航样式。\r\n            let targetIndex = array.findIndex(n => n > scrollTop) - 1;\r\n            for (let i = 0; i < length; i++) {\r\n                i === targetIndex ? document.getElementById(`tree-num-${i}`).className = \"tree-num directory-item-active\" : document.getElementById(`tree-num-${i}`).className = \"tree-num\";\r\n            }\r\n            //当滚动距离超过最后一个锚点时,array中找不到,返回-1\r\n            if (targetIndex === -2) {\r\n                document.getElementById(`tree-num-${length - 1}`).className = \"tree-num directory-item-active\";\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"directory\">\r\n                <ul className=\"directory-list\">\r\n                    {articleTree.map((key, index) =>\r\n                        <li key={index} id={`tree-num-${index}`} className=\"tree-num\" title={key.name} style={{ paddingLeft: key.tag === \"H2\" ? 10 : 22 }} onClick={() => { this.scrollToAnchor(`${key.name}`) }}>{key.name}</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(index);","var map = {\n\t\"./apl/apl.js\": [\n\t\t68,\n\t\t120\n\t],\n\t\"./asciiarmor/asciiarmor.js\": [\n\t\t69,\n\t\t121\n\t],\n\t\"./asn.1/asn.1.js\": [\n\t\t70,\n\t\t122\n\t],\n\t\"./asterisk/asterisk.js\": [\n\t\t71,\n\t\t123\n\t],\n\t\"./brainfuck/brainfuck.js\": [\n\t\t72,\n\t\t124\n\t],\n\t\"./clike/clike.js\": [\n\t\t55,\n\t\t9\n\t],\n\t\"./clojure/clojure.js\": [\n\t\t73,\n\t\t125\n\t],\n\t\"./cmake/cmake.js\": [\n\t\t74,\n\t\t126\n\t],\n\t\"./cobol/cobol.js\": [\n\t\t75,\n\t\t127\n\t],\n\t\"./coffeescript/coffeescript.js\": [\n\t\t56,\n\t\t128\n\t],\n\t\"./commonlisp/commonlisp.js\": [\n\t\t76,\n\t\t129\n\t],\n\t\"./crystal/crystal.js\": [\n\t\t77,\n\t\t130\n\t],\n\t\"./css/css.js\": [\n\t\t48,\n\t\t3\n\t],\n\t\"./cypher/cypher.js\": [\n\t\t78,\n\t\t131\n\t],\n\t\"./d/d.js\": [\n\t\t79,\n\t\t132\n\t],\n\t\"./dart/dart.js\": [\n\t\t80,\n\t\t9,\n\t\t133\n\t],\n\t\"./diff/diff.js\": [\n\t\t81,\n\t\t134\n\t],\n\t\"./django/django.js\": [\n\t\t82,\n\t\t2,\n\t\t3,\n\t\t92\n\t],\n\t\"./dockerfile/dockerfile.js\": [\n\t\t83,\n\t\t106\n\t],\n\t\"./dtd/dtd.js\": [\n\t\t84,\n\t\t135\n\t],\n\t\"./dylan/dylan.js\": [\n\t\t85,\n\t\t136\n\t],\n\t\"./ebnf/ebnf.js\": [\n\t\t86,\n\t\t137\n\t],\n\t\"./ecl/ecl.js\": [\n\t\t87,\n\t\t138\n\t],\n\t\"./eiffel/eiffel.js\": [\n\t\t88,\n\t\t139\n\t],\n\t\"./elm/elm.js\": [\n\t\t89,\n\t\t140\n\t],\n\t\"./erlang/erlang.js\": [\n\t\t90,\n\t\t141\n\t],\n\t\"./factor/factor.js\": [\n\t\t91,\n\t\t107\n\t],\n\t\"./fcl/fcl.js\": [\n\t\t92,\n\t\t142\n\t],\n\t\"./forth/forth.js\": [\n\t\t93,\n\t\t143\n\t],\n\t\"./fortran/fortran.js\": [\n\t\t94,\n\t\t144\n\t],\n\t\"./gas/gas.js\": [\n\t\t95,\n\t\t145\n\t],\n\t\"./gfm/gfm.js\": [\n\t\t96,\n\t\t76,\n\t\t105\n\t],\n\t\"./gherkin/gherkin.js\": [\n\t\t97,\n\t\t146\n\t],\n\t\"./go/go.js\": [\n\t\t98,\n\t\t147\n\t],\n\t\"./groovy/groovy.js\": [\n\t\t99,\n\t\t148\n\t],\n\t\"./haml/haml.js\": [\n\t\t100,\n\t\t2,\n\t\t3,\n\t\t95\n\t],\n\t\"./handlebars/handlebars.js\": [\n\t\t57,\n\t\t101\n\t],\n\t\"./haskell-literate/haskell-literate.js\": [\n\t\t101,\n\t\t110\n\t],\n\t\"./haskell/haskell.js\": [\n\t\t58,\n\t\t149\n\t],\n\t\"./haxe/haxe.js\": [\n\t\t102,\n\t\t150\n\t],\n\t\"./htmlembedded/htmlembedded.js\": [\n\t\t103,\n\t\t2,\n\t\t3,\n\t\t91\n\t],\n\t\"./htmlmixed/htmlmixed.js\": [\n\t\t47,\n\t\t2,\n\t\t3,\n\t\t111\n\t],\n\t\"./http/http.js\": [\n\t\t104,\n\t\t151\n\t],\n\t\"./idl/idl.js\": [\n\t\t105,\n\t\t152\n\t],\n\t\"./javascript/javascript.js\": [\n\t\t49,\n\t\t2\n\t],\n\t\"./jinja2/jinja2.js\": [\n\t\t106,\n\t\t153\n\t],\n\t\"./jsx/jsx.js\": [\n\t\t107,\n\t\t2,\n\t\t112\n\t],\n\t\"./julia/julia.js\": [\n\t\t108,\n\t\t154\n\t],\n\t\"./livescript/livescript.js\": [\n\t\t109,\n\t\t155\n\t],\n\t\"./lua/lua.js\": [\n\t\t110,\n\t\t156\n\t],\n\t\"./markdown/markdown.js\": [\n\t\t63,\n\t\t76\n\t],\n\t\"./mathematica/mathematica.js\": [\n\t\t111,\n\t\t157\n\t],\n\t\"./mbox/mbox.js\": [\n\t\t112,\n\t\t158\n\t],\n\t\"./meta.js\": [\n\t\t53\n\t],\n\t\"./mirc/mirc.js\": [\n\t\t113,\n\t\t159\n\t],\n\t\"./mllike/mllike.js\": [\n\t\t114,\n\t\t160\n\t],\n\t\"./modelica/modelica.js\": [\n\t\t115,\n\t\t161\n\t],\n\t\"./mscgen/mscgen.js\": [\n\t\t116,\n\t\t162\n\t],\n\t\"./mumps/mumps.js\": [\n\t\t117,\n\t\t163\n\t],\n\t\"./nginx/nginx.js\": [\n\t\t118,\n\t\t164\n\t],\n\t\"./nsis/nsis.js\": [\n\t\t119,\n\t\t108\n\t],\n\t\"./ntriples/ntriples.js\": [\n\t\t120,\n\t\t165\n\t],\n\t\"./octave/octave.js\": [\n\t\t121,\n\t\t166\n\t],\n\t\"./oz/oz.js\": [\n\t\t122,\n\t\t167\n\t],\n\t\"./pascal/pascal.js\": [\n\t\t123,\n\t\t168\n\t],\n\t\"./pegjs/pegjs.js\": [\n\t\t124,\n\t\t2,\n\t\t169\n\t],\n\t\"./perl/perl.js\": [\n\t\t125,\n\t\t170\n\t],\n\t\"./php/php.js\": [\n\t\t126,\n\t\t2,\n\t\t3,\n\t\t9,\n\t\t102\n\t],\n\t\"./pig/pig.js\": [\n\t\t127,\n\t\t171\n\t],\n\t\"./powershell/powershell.js\": [\n\t\t128,\n\t\t172\n\t],\n\t\"./properties/properties.js\": [\n\t\t129,\n\t\t173\n\t],\n\t\"./protobuf/protobuf.js\": [\n\t\t130,\n\t\t174\n\t],\n\t\"./pug/pug.js\": [\n\t\t64,\n\t\t2,\n\t\t3,\n\t\t75\n\t],\n\t\"./puppet/puppet.js\": [\n\t\t131,\n\t\t175\n\t],\n\t\"./python/python.js\": [\n\t\t59,\n\t\t176\n\t],\n\t\"./q/q.js\": [\n\t\t132,\n\t\t177\n\t],\n\t\"./r/r.js\": [\n\t\t133,\n\t\t178\n\t],\n\t\"./rpm/rpm.js\": [\n\t\t134,\n\t\t179\n\t],\n\t\"./rst/rst.js\": [\n\t\t135,\n\t\t94\n\t],\n\t\"./ruby/ruby.js\": [\n\t\t51,\n\t\t180\n\t],\n\t\"./rust/rust.js\": [\n\t\t136,\n\t\t109\n\t],\n\t\"./sas/sas.js\": [\n\t\t137,\n\t\t181\n\t],\n\t\"./sass/sass.js\": [\n\t\t61,\n\t\t3,\n\t\t182\n\t],\n\t\"./scheme/scheme.js\": [\n\t\t138,\n\t\t183\n\t],\n\t\"./shell/shell.js\": [\n\t\t139,\n\t\t184\n\t],\n\t\"./sieve/sieve.js\": [\n\t\t140,\n\t\t185\n\t],\n\t\"./slim/slim.js\": [\n\t\t141,\n\t\t2,\n\t\t3,\n\t\t96\n\t],\n\t\"./smalltalk/smalltalk.js\": [\n\t\t142,\n\t\t186\n\t],\n\t\"./smarty/smarty.js\": [\n\t\t143,\n\t\t187\n\t],\n\t\"./solr/solr.js\": [\n\t\t144,\n\t\t188\n\t],\n\t\"./soy/soy.js\": [\n\t\t145,\n\t\t2,\n\t\t3,\n\t\t103\n\t],\n\t\"./sparql/sparql.js\": [\n\t\t146,\n\t\t189\n\t],\n\t\"./spreadsheet/spreadsheet.js\": [\n\t\t147,\n\t\t190\n\t],\n\t\"./sql/sql.js\": [\n\t\t148,\n\t\t191\n\t],\n\t\"./stex/stex.js\": [\n\t\t60,\n\t\t192\n\t],\n\t\"./stylus/stylus.js\": [\n\t\t65,\n\t\t77\n\t],\n\t\"./swift/swift.js\": [\n\t\t149,\n\t\t193\n\t],\n\t\"./tcl/tcl.js\": [\n\t\t150,\n\t\t194\n\t],\n\t\"./textile/textile.js\": [\n\t\t151,\n\t\t195\n\t],\n\t\"./tiddlywiki/tiddlywiki.js\": [\n\t\t152,\n\t\t196\n\t],\n\t\"./tiki/tiki.js\": [\n\t\t153,\n\t\t197\n\t],\n\t\"./toml/toml.js\": [\n\t\t154,\n\t\t198\n\t],\n\t\"./tornado/tornado.js\": [\n\t\t155,\n\t\t2,\n\t\t3,\n\t\t93\n\t],\n\t\"./troff/troff.js\": [\n\t\t156,\n\t\t199\n\t],\n\t\"./ttcn-cfg/ttcn-cfg.js\": [\n\t\t158,\n\t\t200\n\t],\n\t\"./ttcn/ttcn.js\": [\n\t\t157,\n\t\t201\n\t],\n\t\"./turtle/turtle.js\": [\n\t\t159,\n\t\t202\n\t],\n\t\"./twig/twig.js\": [\n\t\t160,\n\t\t104\n\t],\n\t\"./vb/vb.js\": [\n\t\t161,\n\t\t203\n\t],\n\t\"./vbscript/vbscript.js\": [\n\t\t162,\n\t\t204\n\t],\n\t\"./velocity/velocity.js\": [\n\t\t163,\n\t\t205\n\t],\n\t\"./verilog/verilog.js\": [\n\t\t164,\n\t\t206\n\t],\n\t\"./vhdl/vhdl.js\": [\n\t\t165,\n\t\t207\n\t],\n\t\"./vue/vue.js\": [\n\t\t166,\n\t\t2,\n\t\t3,\n\t\t77,\n\t\t75,\n\t\t88\n\t],\n\t\"./webidl/webidl.js\": [\n\t\t167,\n\t\t208\n\t],\n\t\"./xml/xml.js\": [\n\t\t46,\n\t\t209\n\t],\n\t\"./xquery/xquery.js\": [\n\t\t168,\n\t\t210\n\t],\n\t\"./yacas/yacas.js\": [\n\t\t169,\n\t\t211\n\t],\n\t\"./yaml-frontmatter/yaml-frontmatter.js\": [\n\t\t170,\n\t\t113\n\t],\n\t\"./yaml/yaml.js\": [\n\t\t62,\n\t\t212\n\t],\n\t\"./z80/z80.js\": [\n\t\t171,\n\t\t213\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 67;\nmodule.exports = webpackAsyncContext;","import React, { Component } from 'react';\r\nimport CodeMirror from '@uiw/react-codemirror';\r\nimport 'codemirror/theme/monokai.css';\r\nimport Directory from \"../../Directory\";\r\nimport go from \"gojs\";\r\n\r\nlet $ = go.GraphObject.make;\r\nlet codeMirrorOptions = {\r\n    theme: 'monokai',\r\n    mode: 'JSX',\r\n    readOnly: true,\r\n};\r\nlet code1 = `let $ = go.GraphObject.make;\r\nlet myDiagram = $(go.Diagram, \"myDiagramDiv\");\r\nmyDiagram.nodeTemplate =\r\n    $(go.Node, \"Auto\",\r\n        $(go.Shape, {\r\n            figure: \"RoundedRectangle\",\r\n            fill: \"white\"\r\n        }, new go.Binding(\"fill\", \"color\")),\r\n        $(go.TextBlock, {\r\n            margin: 5\r\n        }, new go.Binding(\"text\", \"key\"))\r\n    );\r\nlet nodeDataArray = [{\r\n    key: \"Alpha\",\r\n    color: \"lightblue\"\r\n}, {\r\n    key: \"Beta\",\r\n    color: \"pink\"\r\n}];\r\nlet linkDataArray = [{\r\n    from: \"Alpha\",\r\n    to: \"Beta\"\r\n}];\r\nmyDiagram.model = new go.GraphLinksModel(nodeDataArray, linkDataArray);`;\r\nlet code2 = `let myDiagram = $(go.Diagram, \"myDiagramDiv\", {\r\n    initialContentAlignment: go.Spot.Center\r\n});\r\nmyDiagram.nodeTemplate =\r\n    $(go.Node, \"Auto\",\r\n        $(go.Shape, \"RoundedRectangle\",\r\n            new go.Binding(\"fill\", \"color\", function (c) {\r\n                if (c === 0) return \"red\";\r\n                if (c === 1) return \"blue\";\r\n            })),\r\n        $(go.TextBlock, \"Node\"))\r\nmyDiagram.model = new go.GraphLinksModel([{\r\n    key: \"Alpha\",\r\n    color: 0\r\n}, {\r\n    key: \"Alpha\",\r\n    color: 1\r\n}, {\r\n    key: \"Alpha\",\r\n    color: 42\r\n}]);`;\r\nlet code3 = `let myDiagram = $(go.Diagram, \"myDiagramDiv\", {\r\n    initialContentAlignment: go.Spot.Center\r\n});\r\nmyDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n    $(go.Node, \"Spot\",\r\n        $(go.Shape, \"Rectangle\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(100, 20)\r\n        })\r\n    )\r\n)\r\nmyDiagram.model = new go.GraphLinksModel([{\r\n    key: \"Alpha\",\r\n    category: \"SimpleNode\"\r\n}]);`;\r\nlet code4 = `let myDiagram = $(go.Diagram, \"myDiagramDiv\", {\r\n    initialContentAlignment: go.Spot.Center\r\n});\r\nmyDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n    $(go.Node, \"Spot\",\r\n        $(go.Shape, \"Rectangle\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(100, 20)\r\n        }),\r\n        $(go.Panel),\r\n        $(go.Shape, \"TriangleUp\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(20, 20),\r\n            alignment: go.Spot.Right\r\n        })\r\n    )\r\n)\r\nmyDiagram.model = new go.GraphLinksModel([{\r\n    key: \"Alpha\",\r\n    category: \"SimpleNode\"\r\n}]);`;\r\nlet code5 = `let myDiagram = $(go.Diagram, \"myDiagramDiv\", {\r\n    initialContentAlignment: go.Spot.Center\r\n});\r\nmyDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n    $(go.Node, \"Spot\",\r\n        $(go.Shape, \"Rectangle\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(100, 20)\r\n        }),\r\n        $(go.Panel, \"Auto\", {\r\n                alignment: go.Spot.Left\r\n            },\r\n            $(go.Shape, \"Ellipse\", {\r\n                fill: \"white\"\r\n            }),\r\n            $(go.TextBlock, \"SimpleNode\")\r\n        ),\r\n        $(go.Shape, \"TriangleUp\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(20, 20),\r\n            alignment: go.Spot.Right\r\n        })\r\n    )\r\n)\r\nmyDiagram.model = new go.GraphLinksModel([{\r\n    key: \"Alpha\",\r\n    category: \"SimpleNode\"\r\n}]);`;\r\nlet code6 = `myDiagram.groupTemplateMap.add(\"SimpleGroup\",\r\n    $(go.Group, \"Vertical\",\r\n        $(go.TextBlock, \"Group\"),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\", {\r\n                fill: \"beige\"\r\n            }),\r\n            $(go.Placeholder,{padding:5})\r\n        )\r\n    ))\r\nmyDiagram.model = new go.GraphLinksModel([{\r\n    key: \"Alpha\",\r\n    category: \"SimpleNode\"\r\n},{\r\n    key: \"Beta\",\r\n    isGroup:true,\r\n    category: \"SimpleGroup\"\r\n},{\r\n    key: \"Gamma\",\r\n    group:\"Beta\",\r\n    category: \"SimpleNode\"\r\n},{\r\n    key: \"Delta\",\r\n    group:\"Beta\",\r\n    category: \"SimpleNode\"\r\n}]);\r\n};`;\r\nlet code7 = `myDiagram.linkTemplateMap.add(\"SimpleLink\",\r\n    $(go.Link,\r\n        $(go.Shape),\r\n        $(go.Shape, {\r\n            toArrow: \"Standard\"\r\n        }),\r\n        $(go.TextBlock, \"Link\", {\r\n            segmentOffset: new go.Point(0, 10)\r\n        }),\r\n    )\r\n)`;\r\nlet code8 = `myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n    $(go.Node, \"Spot\",\r\n        $(go.Shape, \"Rectangle\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(100, 20)\r\n        }),\r\n        $(go.Panel, \"Auto\", {\r\n                alignment: go.Spot.Left\r\n            },\r\n            $(go.Shape, \"Ellipse\", {\r\n                    fill: \"white\"\r\n                },\r\n                new go.Binding(\"fill\", \"color\", function (color) {\r\n                    return color === 0 ? \"lime\" : \"cyan\";\r\n                })\r\n            ),\r\n            $(go.TextBlock, \"SimpleNode\",\r\n                new go.Binding(\"text\", \"key\")\r\n            )\r\n        ),\r\n        $(go.Shape, \"TriangleUp\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(20, 20),\r\n            alignment: go.Spot.Right\r\n        })\r\n    )\r\n);\r\n\r\nmyDiagram3.model = new go.GraphLinksModel([{\r\n    key: \"Alpha\",\r\n    category: \"SimpleNode\"\r\n}, {\r\n    key: \"Beta\",\r\n    isGroup: true,\r\n    category: \"SimpleGroup\"\r\n}, {\r\n    key: \"Gamma\",\r\n    group: \"Beta\",\r\n    category: \"SimpleNode\",\r\n    color: 0\r\n}, {\r\n    key: \"Delta\",\r\n    group: \"Beta\",\r\n    category: \"SimpleNode\",\r\n    color: 1\r\n}],\r\n[{\r\n    from: \"Alpha\",\r\n    to: \"Beta\",\r\n    category: \"SimpleLink\"\r\n}]);`;\r\nlet code9 = `myDiagram.model = new go.GraphLinksModel(\r\n    [\r\n        { key: \"Alpha\", color: \"lightblue\", category: \"Square\" }\r\n    ],[\r\n    ]\r\n)`;\r\nlet code10 = `new go.Binding(\"fill\",\"color\"),  //binding to get fill from nodedata.color`\r\n\r\nexport default class index extends Component {\r\n    componentDidMount() {\r\n        this.diagramRender1();\r\n        this.diagramRender2();\r\n        this.diagramRender3();\r\n        this.diagramRender4();\r\n        this.diagramRender5();\r\n        this.diagramRender6();\r\n        this.diagramRender7();\r\n        this.diagramRender8();\r\n    }\r\n    diagramRender1() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv1\");\r\n        myDiagram.nodeTemplate =\r\n            $(go.Node, \"Auto\",\r\n                $(go.Shape, {\r\n                    figure: \"RoundedRectangle\",\r\n                    fill: \"white\"\r\n                }, new go.Binding(\"fill\", \"color\")),\r\n                $(go.TextBlock, {\r\n                    margin: 5\r\n                }, new go.Binding(\"text\", \"key\"))\r\n            );\r\n        let nodeDataArray = [{\r\n            key: \"Alpha\",\r\n            color: \"lightblue\"\r\n        }, {\r\n            key: \"Beta\",\r\n            color: \"pink\"\r\n        }];\r\n        let linkDataArray = [{\r\n            from: \"Alpha\",\r\n            to: \"Beta\"\r\n        }];\r\n        myDiagram.model = new go.GraphLinksModel(nodeDataArray, linkDataArray);\r\n    }\r\n    diagramRender2() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv2\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplate =\r\n            $(go.Node, \"Auto\",\r\n                $(go.Shape, \"RoundedRectangle\",\r\n                    new go.Binding(\"fill\", \"color\", function (c) {\r\n                        if (c === 0) return \"red\";\r\n                        if (c === 1) return \"blue\";\r\n                    })),\r\n                $(go.TextBlock, \"Node\"))\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            color: 0\r\n        }, {\r\n            key: \"Alpha\",\r\n            color: 1\r\n        }, {\r\n            key: \"Alpha\",\r\n            color: 42\r\n        }]);\r\n    }\r\n    diagramRender3() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv3\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n            $(go.Node, \"Spot\",\r\n                $(go.Shape, \"Rectangle\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(100, 20)\r\n                })\r\n            )\r\n        )\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            category: \"SimpleNode\"\r\n        }]);\r\n    }\r\n    diagramRender4() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv4\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n            $(go.Node, \"Spot\",\r\n                $(go.Shape, \"Rectangle\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(100, 20)\r\n                }),\r\n                $(go.Panel),\r\n                $(go.Shape, \"TriangleUp\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(20, 20),\r\n                    alignment: go.Spot.Right\r\n                })\r\n            )\r\n        )\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            category: \"SimpleNode\"\r\n        }]);\r\n    }\r\n    diagramRender5() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv5\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n            $(go.Node, \"Spot\",\r\n                $(go.Shape, \"Rectangle\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(100, 20)\r\n                }),\r\n                $(go.Panel, \"Auto\", {\r\n                    alignment: go.Spot.Left\r\n                },\r\n                    $(go.Shape, \"Ellipse\", {\r\n                        fill: \"white\"\r\n                    }),\r\n                    $(go.TextBlock, \"SimpleNode\")\r\n                ),\r\n                $(go.Shape, \"TriangleUp\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(20, 20),\r\n                    alignment: go.Spot.Right\r\n                })\r\n            )\r\n        )\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            category: \"SimpleNode\"\r\n        }]);\r\n    }\r\n    diagramRender6() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv6\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n            $(go.Node, \"Spot\",\r\n                $(go.Shape, \"Rectangle\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(100, 20)\r\n                }),\r\n                $(go.Panel, \"Auto\", {\r\n                    alignment: go.Spot.Left\r\n                },\r\n                    $(go.Shape, \"Ellipse\", {\r\n                        fill: \"white\"\r\n                    }),\r\n                    $(go.TextBlock, \"SimpleNode\")\r\n                ),\r\n                $(go.Shape, \"TriangleUp\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(20, 20),\r\n                    alignment: go.Spot.Right\r\n                })\r\n            )\r\n        )\r\n        myDiagram.groupTemplateMap.add(\"SimpleGroup\",\r\n            $(go.Group, \"Vertical\",\r\n                $(go.TextBlock, \"Group\"),\r\n                $(go.Panel, \"Auto\",\r\n                    $(go.Shape, \"RoundedRectangle\", {\r\n                        fill: \"beige\"\r\n                    }),\r\n                    $(go.Placeholder, { padding: 5 })\r\n                )\r\n            ))\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            category: \"SimpleNode\"\r\n        }, {\r\n            key: \"Beta\",\r\n            isGroup: true,\r\n            category: \"SimpleGroup\"\r\n        }, {\r\n            key: \"Gamma\",\r\n            group: \"Beta\",\r\n            category: \"SimpleNode\"\r\n        }, {\r\n            key: \"Delta\",\r\n            group: \"Beta\",\r\n            category: \"SimpleNode\"\r\n        }]);\r\n    }\r\n    diagramRender7() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv7\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n            $(go.Node, \"Spot\",\r\n                $(go.Shape, \"Rectangle\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(100, 20)\r\n                }),\r\n                $(go.Panel, \"Auto\", {\r\n                    alignment: go.Spot.Left\r\n                },\r\n                    $(go.Shape, \"Ellipse\", {\r\n                        fill: \"white\"\r\n                    }),\r\n                    $(go.TextBlock, \"SimpleNode\")\r\n                ),\r\n                $(go.Shape, \"TriangleUp\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(20, 20),\r\n                    alignment: go.Spot.Right\r\n                })\r\n            )\r\n        )\r\n        myDiagram.linkTemplateMap.add(\"SimpleLink\",\r\n            $(go.Link,\r\n                $(go.Shape),\r\n                $(go.Shape, {\r\n                    toArrow: \"Standard\"\r\n                }),\r\n                $(go.TextBlock, \"Link\", {\r\n                    segmentOffset: new go.Point(0, 10)\r\n                }),\r\n            )\r\n        )\r\n        myDiagram.groupTemplateMap.add(\"SimpleGroup\",\r\n            $(go.Group, \"Vertical\",\r\n                $(go.TextBlock, \"Group\"),\r\n                $(go.Panel, \"Auto\",\r\n                    $(go.Shape, \"RoundedRectangle\", {\r\n                        fill: \"beige\"\r\n                    }),\r\n                    $(go.Placeholder, { padding: 5 })\r\n                )\r\n            ))\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            category: \"SimpleNode\"\r\n        }, {\r\n            key: \"Beta\",\r\n            isGroup: true,\r\n            category: \"SimpleGroup\"\r\n        }, {\r\n            key: \"Gamma\",\r\n            group: \"Beta\",\r\n            category: \"SimpleNode\"\r\n        }, {\r\n            key: \"Delta\",\r\n            group: \"Beta\",\r\n            category: \"SimpleNode\"\r\n        }],\r\n            [{\r\n                from: \"Alpha\",\r\n                to: \"Beta\",\r\n                category: \"SimpleLink\"\r\n            }]);\r\n    }\r\n    diagramRender8() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv8\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n            $(go.Node, \"Spot\",\r\n                $(go.Shape, \"Rectangle\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(100, 20)\r\n                }),\r\n                $(go.Panel, \"Auto\", {\r\n                    alignment: go.Spot.Left\r\n                },\r\n                    $(go.Shape, \"Ellipse\", {\r\n                        fill: \"white\"\r\n                    },\r\n                        new go.Binding(\"fill\", \"color\", function (color) {\r\n                            return color === 0 ? \"lime\" : \"cyan\";\r\n                        })\r\n                    ),\r\n                    $(go.TextBlock, \"SimpleNode\",\r\n                        new go.Binding(\"text\", \"key\")\r\n                    )\r\n                ),\r\n                $(go.Shape, \"TriangleUp\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(20, 20),\r\n                    alignment: go.Spot.Right\r\n                })\r\n            )\r\n        )\r\n        myDiagram.linkTemplateMap.add(\"SimpleLink\",\r\n            $(go.Link,\r\n                $(go.Shape),\r\n                $(go.Shape, {\r\n                    toArrow: \"Standard\"\r\n                }),\r\n                $(go.TextBlock, \"Link\", {\r\n                    segmentOffset: new go.Point(0, 10)\r\n                }),\r\n            )\r\n        )\r\n        myDiagram.groupTemplateMap.add(\"SimpleGroup\",\r\n            $(go.Group, \"Vertical\",\r\n                $(go.TextBlock, \"Group\"),\r\n                $(go.Panel, \"Auto\",\r\n                    $(go.Shape, \"RoundedRectangle\", {\r\n                        fill: \"beige\"\r\n                    }),\r\n                    $(go.Placeholder, {\r\n                        padding: 5\r\n                    })\r\n                )\r\n            ))\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            category: \"SimpleNode\"\r\n        }, {\r\n            key: \"Beta\",\r\n            isGroup: true,\r\n            category: \"SimpleGroup\"\r\n        }, {\r\n            key: \"Gamma\",\r\n            group: \"Beta\",\r\n            category: \"SimpleNode\",\r\n            color: 0\r\n        }, {\r\n            key: \"Delta\",\r\n            group: \"Beta\",\r\n            category: \"SimpleNode\",\r\n            color: 1\r\n        }],\r\n            [{\r\n                from: \"Alpha\",\r\n                to: \"Beta\",\r\n                category: \"SimpleLink\"\r\n            }]);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"page-content\">\r\n                <div className=\"article\">\r\n                    <div className=\"article-title\">\r\n                        <h1>第五节 使用 GoJS 构建 Parts(Templates)</h1>\r\n                    </div>\r\n                    <div className=\"article-content\">\r\n                        <p>先看下面的代码：</p>\r\n                        <CodeMirror value={code1} options={codeMirrorOptions} />\r\n                        <div id=\"myDiagramDiv1\" className=\"diagram\"></div>\r\n                        <h2>使用 Templates</h2>\r\n                        <ul>\r\n                            <li>每个 Model 数据对象中的“category”数据属性指定用于该对象的模板</li>\r\n                        </ul>\r\n                        <ul data-lake-indent=\"1\">\r\n                            <li>“category”数据属性的值对应于 templateMap 中某一项的键值(比如nodeTemplateMap)</li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li>GoJS 支持 nodeTemplateMap、linkTemplateMap 和 groupTemplateMap</li>\r\n                        </ul>\r\n                        <ul data-lake-indent=\"1\">\r\n                            <li>{`添加到映射:<supported part template map>.add(<key>,<Part>)`}</li>\r\n                        </ul>\r\n                        <p>如下图所示</p>\r\n                        <div className=\"text-center\">\r\n                            <img src={require(\"../../../assets/images/20200405140043.png\")} alt=\"\" />\r\n                        </div>\r\n                        <h2>数据绑定</h2>\r\n                        <CodeMirror value={code9} options={codeMirrorOptions} />\r\n                        <p>上面的代码中,\"color\"是一个客观属性,GoJS 并不知道\"color\"是什么,须使用 new go.Binding(\"fill\",\"color\"),将 data 中的 color 绑定到 fill 属性</p>\r\n                        <ul>\r\n                            <li>将 Part 的样式/表现绑定到 Model 中的某些数据</li>\r\n                            <li>允许 Part 的数据和可视化之间的通信</li>\r\n                            <li>{`简单绑定:new go.Binding(target property>,<source data property>)`},例如</li>\r\n                        </ul>\r\n                        <CodeMirror value={code10} options={codeMirrorOptions} />\r\n                        <h2>转换函数</h2>\r\n                        <ul>\r\n                            <li>函数作为第三个参数传递给 go.Binding</li>\r\n                            <li>接收作为参数绑定的 Model 数据属性的值</li>\r\n                            <li>返回值作为目标 GraphObiect 属性</li>\r\n                        </ul>\r\n                        <p>代码及效果如下所示：</p>\r\n                        <CodeMirror value={code2} options={codeMirrorOptions} />\r\n                        <div id=\"myDiagramDiv2\" className=\"diagram\"></div>\r\n                        <h2>几个 Part template 的例子</h2>\r\n                        <h3>初始效果</h3>\r\n                        <CodeMirror value={code3} options={codeMirrorOptions} />\r\n                        <div id=\"myDiagramDiv3\" className=\"diagram\"></div>\r\n                        <h3>右侧添加三角形</h3>\r\n                        <CodeMirror value={code4} options={codeMirrorOptions} />\r\n                        <div id=\"myDiagramDiv4\" className=\"diagram\"></div>\r\n                        <h3>左侧添加椭圆</h3>\r\n                        <CodeMirror value={code5} options={codeMirrorOptions} />\r\n                        <div id=\"myDiagramDiv5\" className=\"diagram\"></div>\r\n                        <h3>添加 Group</h3>\r\n                        <CodeMirror value={code6} options={codeMirrorOptions} />\r\n                        <div id=\"myDiagramDiv6\" className=\"diagram\" style={{ maxWidth: 600 }}></div>\r\n                        <h3>添加 Link</h3>\r\n                        <CodeMirror value={code7} options={codeMirrorOptions} />\r\n                        <div id=\"myDiagramDiv7\" className=\"diagram\" style={{ maxWidth: 600 }}></div>\r\n                        <h3>绑定 key 到 text、color 到 fill</h3>\r\n                        <CodeMirror value={code8} options={codeMirrorOptions} />\r\n                        <div id=\"myDiagramDiv8\" className=\"diagram\" style={{ maxWidth: 600 }}></div>\r\n                        <br />\r\n                        <br />\r\n                        <p>相关代码：</p>\r\n                        <p><a href=\"https://github.com/LiuZheAb/GoJS_Demo/blob/master/05buildingParts(Templates).html\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/LiuZheAb/GoJS_Demo/blob/master/05buildingParts(Templates).html</a></p>\r\n                    </div>\r\n                </div>\r\n                <Directory />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}