{"version":3,"sources":["components/Directory/index.js","components/Documents/CodeReview/1.js"],"names":["index","props","bindHandleScroll","event","scrollTop","srcElement","documentElement","window","pageYOffset","body","setState","scrollToAnchor","anchorName","anchorElement","document","getElementById","scrollIntoView","block","behavior","state","articleTree","getArticleTree","bind","childrens","getElementsByClassName","children","i","len","length","nodeName","id","innerText","push","name","tag","this","pathSnippets","location","pathname","split","filter","TOTAL_DATA","getElementsByTagName","innerHTML","section","title","setTitle","header","before","scrollY","directory","offsetTop","addEventListener","onscroll","footer","H","offsetParent","s","offsetHeight","style","after","className","removeEventListener","array","targetObj","targetIndex","findIndex","n","map","key","paddingLeft","onClick","Component","withRouter","to","href","target","rel"],"mappings":"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","file":"static/js/59.608708f5.chunk.js","sourcesContent":["//文档右侧标题导航\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TOTAL_DATA } from \"../../assets/data\";\r\nimport \"./index.less\";\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            articleTree: [],\r\n            scrollTop: null\r\n        }\r\n        this.getArticleTree = this.getArticleTree.bind(this);\r\n    }\r\n    getArticleTree() {\r\n        let childrens = document.getElementsByClassName(\"article-content\")[0].children;\r\n        let articleTree = [];\r\n        for (let i = 0, len = childrens.length; i < len - 1; i++) {\r\n            let nodeName = childrens[i].nodeName;\r\n            if (nodeName === \"H2\" || nodeName === \"H3\") {\r\n                childrens[i].id = childrens[i].innerText;\r\n                articleTree.push({\r\n                    name: childrens[i].innerText,\r\n                    tag: childrens[i].nodeName\r\n                });\r\n            }\r\n        }\r\n        this.setState({ articleTree });\r\n    }\r\n    setTitle() {\r\n        let path = this.props.location.pathname;\r\n        const pathSnippets = path.split('/').filter(i => i);\r\n        for (let i = 0, len = TOTAL_DATA.length; i < len; i++) {\r\n            if (pathSnippets[0] === TOTAL_DATA[i].name) {\r\n                document.getElementsByTagName(\"h1\")[0].innerHTML = TOTAL_DATA[i].section.length > 0 ? TOTAL_DATA[i].section[pathSnippets[pathSnippets.length - 1]] : TOTAL_DATA[i].title;\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //获取文档标题树\r\n        this.getArticleTree();\r\n        this.setTitle();\r\n        //页面滚动到文档末尾时，将directory逐渐向上隐藏\r\n        let header = document.getElementById(\"header\");\r\n        let before = window.scrollY;\r\n        let directory = document.getElementsByClassName(\"directory-list\")[0];\r\n        //offsetTop为页面加载时directory距顶端的距离\r\n        let offsetTop = directory.offsetTop;\r\n        window.addEventListener('scroll', this.bindHandleScroll);\r\n        window.onscroll = function () {\r\n            let footer = document.getElementsByClassName(\"page-footer\")[0], H = 0;\r\n            while (footer) {\r\n                //H为footer距顶端的距离\r\n                H += footer.offsetTop;\r\n                footer = footer.offsetParent;\r\n            }\r\n            let s = document.body.scrollTop || document.documentElement.scrollTop;\r\n            //s为当前滚动距离加offsetTop加directory高度,即directory底端距顶部的距离\r\n            s = s + (offsetTop + directory.offsetHeight);\r\n            //当s超出H时,directory向上收起\r\n            if (s > H + header.offsetHeight) {\r\n                directory.style = `position:fixed;top:${offsetTop - s + H}px;transition:none`;\r\n            } else {\r\n                // 在s<=H时,若向下滚动时,滚动距离超过header高度将header收起;向上滚动则将header显示,并且directory随header平移\r\n                let after = window.scrollY;\r\n                if (after > header.offsetHeight) {\r\n                    if (before < after) {\r\n                        header.className = \"ant-layout-header header header-affixed\";\r\n                        directory.className = \"directory-list directory-affixed\"\r\n                        before = after;\r\n                    };\r\n                    if (before > after) {\r\n                        header.className = \"ant-layout-header header header-visible\";\r\n                        directory.className = \"directory-list\"\r\n                        before = after;\r\n                    };\r\n                }\r\n                directory.style = \"\";\r\n            }\r\n        }\r\n    }\r\n    //获取滚动条滚动的高度\r\n    bindHandleScroll = (event) => {\r\n        const scrollTop = (event.srcElement ? event.srcElement.documentElement.scrollTop : false)\r\n            || window.pageYOffset\r\n            || (event.srcElement ? event.srcElement.body.scrollTop : 0);\r\n        this.setState({ scrollTop });\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.bindHandleScroll);\r\n    }\r\n    //点击directory跳转到锚点\r\n    scrollToAnchor = (anchorName) => {\r\n        if (anchorName) {\r\n            let anchorElement = document.getElementById(anchorName);\r\n            if (anchorElement) {\r\n                anchorElement.scrollIntoView({\r\n                    block: 'start',\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let { articleTree, scrollTop } = this.state;\r\n        let length = articleTree.length;\r\n        if (document.getElementById(`tree-num-0`) && length > 0) {\r\n            let array = [];\r\n            //array内为所有锚点的offsetTop,从小到大排列\r\n            for (let i = 0; i < length; i++) {\r\n                let targetObj = document.getElementById(articleTree[i].name);\r\n                array.push(targetObj.offsetTop);\r\n            }\r\n            //targetIndex为array中第一个大于当前滚动距离的值的index,通过offsetTop判断当前滚动到哪个锚点,并改变对应的标题导航样式。\r\n            let targetIndex = array.findIndex(n => n > scrollTop) - 1;\r\n            for (let i = 0; i < length; i++) {\r\n                i === targetIndex ? document.getElementById(`tree-num-${i}`).className = \"tree-num directory-item-active\" : document.getElementById(`tree-num-${i}`).className = \"tree-num\";\r\n            }\r\n            //当滚动距离超过最后一个锚点时,array中找不到,返回-1\r\n            if (targetIndex === -2) {\r\n                document.getElementById(`tree-num-${length - 1}`).className = \"tree-num directory-item-active\";\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"directory\">\r\n                <ul className=\"directory-list\">\r\n                    {articleTree.map((key, index) =>\r\n                        <li key={index} id={`tree-num-${index}`} className=\"tree-num\" title={key.name} style={{ paddingLeft: key.tag === \"H2\" ? 10 : 22 }} onClick={() => { this.scrollToAnchor(`${key.name}`) }}>{key.name}</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(index);","import React, { Component } from 'react';\r\nimport Directory from \"../../Directory\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class index extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page-content\">\r\n                <div className=\"article\">\r\n                    <div className=\"article-title\">\r\n                        <h1>代码评审标准</h1>\r\n                    </div>\r\n                    <div className=\"article-content\">\r\n                        <p className=\"indent-2\">代码评审的主要目的是确保随着时间的推移，谷歌的代码库的整体代码健康状况正在改善。代码评审的所有工具和过程都是为此目的而设计的。</p>\r\n                        <p className=\"indent-2\">为了实现这一点，必须平衡一系列的权衡。</p>\r\n                        <p className=\"indent-2\">首先，开发人员必须能够在他们的任务上取得进展。如果您从来没有向代码库提交过改进，那么代码库也就从来没有改进过。另外，评审人员做任何更改都很困难，那么开发人员就没有动力在将来进行改进。</p>\r\n                        <p className=\"indent-2\">另一方面，评审人员的职责是确保每个CL的质量，使其代码库的总体代码健康度不会随着时间的推移而下降。这可能很棘手，因为随着时间的推移，代码库常常会随着代码健康状况的小幅下降而退化，尤其是当团队面临重大的时间限制，并且他们觉得必须走捷径才能实现目标时。</p>\r\n                        <p className=\"indent-2\">此外，评审人员对他们所评审的代码拥有所有权和责任。他们希望确保代码库保持一致、可维护，以及“<Link to=\"/codereview/2\">代码评审要点</Link>”中提到的所有其他内容。</p>\r\n                        <p className=\"indent-2\">因此，我们得到以下规则作为我们在代码评审中期望的标准:</p>\r\n                        <p className=\"indent-2\"><b>一般来说，只要 CL 确实提高了正在处理的系统的整体代码健康度，评审人员就应该赞成此CL，即使此CL不是完美的。</b></p>\r\n                        <p className=\"indent-2\">这是所有代码评审指南中的高级原则。</p>\r\n                        <p className=\"indent-2\">当然，这也有局限性。例如，如果 CL 添加了评审人员不希望在其系统中使用的功能，那么即使代码设计良好，评审人员也可以拒绝批准。</p>\r\n                        <p className=\"indent-2\">这里的一个关键点是，没有“完美”的代码，只有更好的代码。评审人员不应该要求作者在批准之前对CL的每一个微小部分进行打磨。相反，评审人员应该权衡取得进展的需要和他们所建议的变更的重要性。评审人员不应该追求完美，而应该追求持续的改进。作为一个整体，提高系统可维护性、可读性和可理解性的 CL 不应该因为它不是“完美的”而被延迟几天或几周。</p>\r\n                        <p className=\"indent-2\">评审人员应该随时留下评论，表示有些东西可以做得更好，但是如果不是很重要，可以在前面加上“ Nit: ”这样的前缀，让作者知道这只是一种修饰，他们可以选择忽略。</p>\r\n                        <p className=\"indent-2\">注意:本文档中没有任何内容证明签入 CLs 肯定会恶化系统的整体代码健康状况。只有在<a href=\"https://github.com/google/eng-practices/blob/master/review/emergencies.md\" target=\"_blank\" rel=\"noopener noreferrer\">紧急情况</a>下你才会这么做。</p>\r\n                        <h2>指导</h2>\r\n                        <p className=\"indent-2\">代码评审的一个重要功能是教开发人员关于语言、框架或一般软件设计原则的新知识。留下帮助开发人员学习新东西的评论总是好的。随着时间的推移，共享知识是改善系统代码健康状况的一部分。请记住，如果您的评论纯粹是教育性的，但对于满足本文档中描述的标准并不是至关重要的，那么在它前面加上“ Nit: ”，或者以其他方式表明作者并不强制在本 CL 中解决它。</p>\r\n                        <h2>原则</h2>\r\n                        <ul className=\"indent-2\">\r\n                            <li>技术事实和数据比意见和个人偏好更重要。</li>\r\n                            <li>在风格问题上，<a href=\"http://google.github.io/styleguide/\" target=\"_blank\" rel=\"noopener noreferrer\">风格指南</a>是绝对权威的。任何不在样式指南中的纯样式点(空格等)都是个人偏好的问题。风格应该与现有的一致。如果没有以前的风格，接受作者的风格。</li>\r\n                            <li>软件设计的各个方面几乎从来不是纯粹的风格问题，也不只是个人偏好。它们是建立在基本原则的基础上的，应该在这些原则的基础上加以衡量，而不仅仅是个人意见。有时有一些有效的选择。如果作者能够证明(通过数据或基于可靠的工程原理)几种方法是同样有效的，那么评审人员应该接受作者的偏好。否则，选择取决于软件设计的标准原则。</li>\r\n                            <li>如果没有其他规则适用，那么评审人员可能会要求作者与当前代码库中的内容保持一致，只要这不会恶化系统的整体代码健康状况。</li>\r\n                        </ul>\r\n                        <h2>解决冲突</h2>\r\n                        <p className=\"indent-2\">对代码评审中的任何冲突，开发人员和评审人员应该始终根据本文档的内容以及代码开发者指南和代码评审者指南中的其他文档，尝试达成一致意见。</p>\r\n                        <p className=\"indent-2\">当达成一致意见变得特别困难时，在评审人员和作者之间进行面对面的会议或风险投资将会有所帮助，而不是仅仅试图通过代码评审的评论来解决冲突。(不过，如果您这样做了，请确保将讨论结果记录在 CL 的评论中，以供将来的读者参考。)</p>\r\n                        <p className=\"indent-2\">如果这不能解决问题，最常见的解决方法就是升级。升级途径通常是更广泛的团队讨论，让 TL (Team Leader)参与进来，请求代码维护人员作出决策，或者请求 Eng (engineer)经理提供帮助。<b>不要因为作者和评审人员不能达成一致意见而让 CL 无所事事。</b></p>\r\n                    </div>\r\n                </div>\r\n                <Directory />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}